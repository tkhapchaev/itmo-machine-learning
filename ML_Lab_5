{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.5.2"},"colab":{"provenance":[{"file_id":"1qNXv_GzDzMxqhzu-N2S2grEhkKHwwoRy","timestamp":1699635692776},{"file_id":"1SOx8vThNzVFZR_zaUlIZ56WxGNaVJ1hk","timestamp":1604754473954},{"file_id":"1XUT-Qa-VLIAMmHbt6pe3AdzDLSyaFoWv","timestamp":1604677054518},{"file_id":"1UpsFM_rY1G1r2EBkqj-A-3wpk1l_Ambe","timestamp":1596006394187},{"file_id":"1TtILmuSoWXOYmbTIAQmGaScvuHGWvpsI","timestamp":1595563808854},{"file_id":"1EdBdyqxLu-WiLmriWNwYl5Ct33JYcEG2","timestamp":1582113683695},{"file_id":"10_Aehfbxgr3fxXPgI1gM5BTU8yOy-Z4U","timestamp":1579514615233}]}},"cells":[{"cell_type":"markdown","metadata":{"id":"UHX9p5jfTySS"},"source":["## Задание 5.1"]},{"cell_type":"markdown","metadata":{"id":"0EnHNZtbXlH0"},"source":["Набор данных тут: https://github.com/sismetanin/rureviews, также есть в папке [Data](https://drive.google.com/drive/folders/1YAMe7MiTxA-RSSd8Ex2p-L0Dspe6Gs4L). Те, кто предпочитает работать с английским языком, могут использовать набор данных `sms_spam`."]},{"cell_type":"markdown","metadata":{"id":"bJox-LoonoPx"},"source":["Применим полученные навыки и решим задачу анализа тональности отзывов.\n","\n","Нужно повторить весь пайплайн от сырых текстов до получения обученной модели.\n","\n","Возможные шаги предобработки:\n","1. токенизация\n","2. приведение к нижнему регистру\n","3. удаление стоп-слов\n","4. лемматизация\n","5. векторизация (с настройкой гиперпараметров)\n","\n","Обязательно использование векторайзеров:\n","1. мешок n-грамм (диапазон для n подбирайте самостоятельно, запрещено использовать только униграммы).\n","2. tf-idf ((диапазон для n подбирайте самостоятельно, также нужно подбирать гиперпараметры max_df, min_df, max_features)\n","3. символьные n-граммы (диапазон для n подбирайте самостоятельно)\n","\n","В качестве классификатора нужно использовать наивный байесовский классификатор.\n","\n","Для сравнения векторайзеров между собой используйте precision, recall, f1-score и accuracy. Для этого сформируйте датафрейм, в котором в строках будут разные векторайзеры, а в столбцах разные метрики качества, а в  ячейках будут значения этих метрик для соответсвующих векторайзеров."]},{"cell_type":"code","source":["!pip install pymorphy2\n","from pymorphy2 import MorphAnalyzer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GDWf7OJ7C6vO","executionInfo":{"status":"ok","timestamp":1699801202590,"user_tz":-180,"elapsed":5107,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"5bf3d30e-b9c3-4861-ed93-952ac4706f87"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pymorphy2 in /usr/local/lib/python3.10/dist-packages (0.9.1)\n","Requirement already satisfied: dawg-python>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from pymorphy2) (0.7.2)\n","Requirement already satisfied: pymorphy2-dicts-ru<3.0,>=2.4 in /usr/local/lib/python3.10/dist-packages (from pymorphy2) (2.4.417127.4579844)\n","Requirement already satisfied: docopt>=0.6 in /usr/local/lib/python3.10/dist-packages (from pymorphy2) (0.6.2)\n"]}]},{"cell_type":"code","source":["import nltk\n","import pandas as pd\n","from nltk.tokenize import word_tokenize\n","from google.colab import drive\n","from sklearn.model_selection import train_test_split\n","from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.metrics import precision_score, recall_score, f1_score, accuracy_score\n","from sklearn.pipeline import make_pipeline\n","from nltk.corpus import stopwords\n","from nltk.stem import WordNetLemmatizer\n","\n","nltk.download('stopwords')\n","nltk.download('wordnet')\n","nltk.download('punkt')\n","\n","drive.mount('/content/drive')\n","dataframe = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/ML_Lab_5_Data/women-clothing-accessories.csv', sep=\"\\t\", usecols=[0, 1])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q4Ek3HH-onK7","executionInfo":{"status":"ok","timestamp":1699801651123,"user_tz":-180,"elapsed":2645,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"323cbbc7-4bf0-4484-dc69-df86e0589e87"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n","[nltk_data] Downloading package wordnet to /root/nltk_data...\n","[nltk_data]   Package wordnet is already up-to-date!\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n"]},{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["dataframe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"rFaEK82npVgI","executionInfo":{"status":"ok","timestamp":1699801653277,"user_tz":-180,"elapsed":257,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"c3391c62-d5f5-42ee-b0e8-7a299fa152c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                  review sentiment\n","0      качество плохое пошив ужасный (горловина напер...  negative\n","1      Товар отдали другому человеку, я не получила п...  negative\n","2      Ужасная синтетика! Тонкая, ничего общего с пре...  negative\n","3      товар не пришел, продавец продлил защиту без м...  negative\n","4          Кофточка голая синтетика, носить не возможно.  negative\n","...                                                  ...       ...\n","89995  сделано достаточно хорошо. на ткани сделан рис...  positive\n","89996  Накидка шикарная. Спасибо большое провдо линяе...  positive\n","89997  спасибо большое ) продовца рекомендую.. заказа...  positive\n","89998  Очень довольна заказом! Меньше месяца в РБ.  К...  positive\n","89999  хорошая куртка. постороннего запаха нет. швы р...  positive\n","\n","[90000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-39932492-ed9b-44f0-915d-4df66c9e4790\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>review</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>качество плохое пошив ужасный (горловина напер...</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Товар отдали другому человеку, я не получила п...</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Ужасная синтетика! Тонкая, ничего общего с пре...</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>товар не пришел, продавец продлил защиту без м...</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Кофточка голая синтетика, носить не возможно.</td>\n","      <td>negative</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>89995</th>\n","      <td>сделано достаточно хорошо. на ткани сделан рис...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>89996</th>\n","      <td>Накидка шикарная. Спасибо большое провдо линяе...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>89997</th>\n","      <td>спасибо большое ) продовца рекомендую.. заказа...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>89998</th>\n","      <td>Очень довольна заказом! Меньше месяца в РБ.  К...</td>\n","      <td>positive</td>\n","    </tr>\n","    <tr>\n","      <th>89999</th>\n","      <td>хорошая куртка. постороннего запаха нет. швы р...</td>\n","      <td>positive</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>90000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39932492-ed9b-44f0-915d-4df66c9e4790')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-39932492-ed9b-44f0-915d-4df66c9e4790 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-39932492-ed9b-44f0-915d-4df66c9e4790');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-34fd9ab6-ea54-4f98-b1eb-7dd552edf8dd\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34fd9ab6-ea54-4f98-b1eb-7dd552edf8dd')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-34fd9ab6-ea54-4f98-b1eb-7dd552edf8dd button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":62}]},{"cell_type":"code","source":["dataframe[\"sentiment\"].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Nkn58tldpwQl","executionInfo":{"status":"ok","timestamp":1699801655102,"user_tz":-180,"elapsed":234,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"590f515d-58bb-4705-c791-82b88016f820"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["negative    30000\n","neautral    30000\n","positive    30000\n","Name: sentiment, dtype: int64"]},"metadata":{},"execution_count":63}]},{"cell_type":"code","source":["dataframe[\"sentiment\"] = dataframe[\"sentiment\"].map({\"negative\" : 0, \"neautral\" : 1, \"positive\": 2})\n","dataframe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"t2YF-6Jvp510","executionInfo":{"status":"ok","timestamp":1699801656374,"user_tz":-180,"elapsed":231,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"d3fa5bad-b84c-4197-e42a-adf45932707b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                  review  sentiment\n","0      качество плохое пошив ужасный (горловина напер...          0\n","1      Товар отдали другому человеку, я не получила п...          0\n","2      Ужасная синтетика! Тонкая, ничего общего с пре...          0\n","3      товар не пришел, продавец продлил защиту без м...          0\n","4          Кофточка голая синтетика, носить не возможно.          0\n","...                                                  ...        ...\n","89995  сделано достаточно хорошо. на ткани сделан рис...          2\n","89996  Накидка шикарная. Спасибо большое провдо линяе...          2\n","89997  спасибо большое ) продовца рекомендую.. заказа...          2\n","89998  Очень довольна заказом! Меньше месяца в РБ.  К...          2\n","89999  хорошая куртка. постороннего запаха нет. швы р...          2\n","\n","[90000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-9f3a64c1-d4a6-4f82-9519-9237a295413a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>review</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>качество плохое пошив ужасный (горловина напер...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Товар отдали другому человеку, я не получила п...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Ужасная синтетика! Тонкая, ничего общего с пре...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>товар не пришел, продавец продлил защиту без м...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Кофточка голая синтетика, носить не возможно.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>89995</th>\n","      <td>сделано достаточно хорошо. на ткани сделан рис...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>89996</th>\n","      <td>Накидка шикарная. Спасибо большое провдо линяе...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>89997</th>\n","      <td>спасибо большое ) продовца рекомендую.. заказа...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>89998</th>\n","      <td>Очень довольна заказом! Меньше месяца в РБ.  К...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>89999</th>\n","      <td>хорошая куртка. постороннего запаха нет. швы р...</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>90000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f3a64c1-d4a6-4f82-9519-9237a295413a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9f3a64c1-d4a6-4f82-9519-9237a295413a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9f3a64c1-d4a6-4f82-9519-9237a295413a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5b7e0671-ec62-457b-afb3-061286b75462\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5b7e0671-ec62-457b-afb3-061286b75462')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5b7e0671-ec62-457b-afb3-061286b75462 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["dataframe[\"sentiment\"].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cUIVCeB60qI9","executionInfo":{"status":"ok","timestamp":1699801658288,"user_tz":-180,"elapsed":227,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"79eded1c-13bf-463a-8f85-f9ba40386dbc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    30000\n","1    30000\n","2    30000\n","Name: sentiment, dtype: int64"]},"metadata":{},"execution_count":65}]},{"cell_type":"code","source":["analyzer = MorphAnalyzer()\n","dataframe[\"review\"] = dataframe.apply(lambda sentence: word_tokenize(sentence[\"review\"]), axis=1)\n","dataframe[\"review\"] = dataframe.apply(lambda sentence: [word.lower() for word in sentence[\"review\"] if word.isalpha()], axis=1)\n","dataframe[\"review\"] = dataframe.apply(lambda sentence: [word for word in sentence[\"review\"] if word not in stopwords.words(\"russian\")], axis=1)\n","dataframe[\"review\"] = dataframe.apply(lambda sentence: \" \".join([analyzer.parse(word)[0].normal_form for word in sentence[\"review\"]]), axis=1)"],"metadata":{"id":"zCxJRdlPCne8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["dataframe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"R0f3_Sa2Gn6U","executionInfo":{"status":"ok","timestamp":1699802156878,"user_tz":-180,"elapsed":260,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"bda58d2d-d1f2-45d4-8081-84b274efe5f8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                  review  sentiment\n","0      качество плохой пошив ужасный горловина напере...          0\n","1      товар отдать другой человек получить посылка л...          0\n","2      ужасный синтетик тонкий общий представить карт...          0\n","3      товар прийти продавец продлить защита мой согл...          0\n","4                кофточка голый синтетик носить возможно          0\n","...                                                  ...        ...\n","89995  сделать достаточно ткань сделать рисунок замет...          2\n","89996  накидка шикарный спасибо большой провдо линять...          2\n","89997  спасибо большой продовца рекомендовать заказат...          2\n","89998  очень довольный заказ маленький месяц рб курье...          2\n","89999  хороший куртка посторонний запах шов ровный ни...          2\n","\n","[90000 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-f17c48b3-a064-43cd-a3d6-96af2ab0f41e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>review</th>\n","      <th>sentiment</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>качество плохой пошив ужасный горловина напере...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>товар отдать другой человек получить посылка л...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ужасный синтетик тонкий общий представить карт...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>товар прийти продавец продлить защита мой согл...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>кофточка голый синтетик носить возможно</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>89995</th>\n","      <td>сделать достаточно ткань сделать рисунок замет...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>89996</th>\n","      <td>накидка шикарный спасибо большой провдо линять...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>89997</th>\n","      <td>спасибо большой продовца рекомендовать заказат...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>89998</th>\n","      <td>очень довольный заказ маленький месяц рб курье...</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>89999</th>\n","      <td>хороший куртка посторонний запах шов ровный ни...</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>90000 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f17c48b3-a064-43cd-a3d6-96af2ab0f41e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f17c48b3-a064-43cd-a3d6-96af2ab0f41e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f17c48b3-a064-43cd-a3d6-96af2ab0f41e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-48c63a18-e873-4ffd-83d4-72dbc0f93cfa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-48c63a18-e873-4ffd-83d4-72dbc0f93cfa')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-48c63a18-e873-4ffd-83d4-72dbc0f93cfa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["comparison = pd.DataFrame()\n","X_train, X_test, y_train, y_test = train_test_split(dataframe[\"review\"], dataframe[\"sentiment\"], train_size=0.7)\n","\n","def generate_range(min, max):\n","  result = []\n","\n","  for i in range(min, max):\n","    for j in range(i, max):\n","      result.append((i, j))\n","\n","  return result"],"metadata":{"id":"bYW8uJdKGsE1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["for i in generate_range(1, 5):\n","  vectorizer = CountVectorizer(ngram_range=i)\n","\n","  vectorized_X_train = vectorizer.fit_transform(X_train)\n","  vectorized_X_test = vectorizer.transform(X_test)\n","\n","  classifier = MultinomialNB()\n","  classifier.fit(vectorized_X_train, y_train)\n","\n","  y_predicted = classifier.predict(vectorized_X_test)\n","\n","  current = pd.DataFrame(\n","    {\"Precision\": [precision_score(y_test, y_predicted, average=\"weighted\")],\n","    \"Recall\": [recall_score(y_test, y_predicted, average=\"weighted\")],\n","    \"F1-Score\": [f1_score(y_test, y_predicted, average=\"weighted\")],\n","    \"Accuracy\": [accuracy_score(y_test, y_predicted)]},\n","    index=[\"CountVectorizer (\" + str(i[0]) + \", \" + str(i[1]) + \")\"])\n","\n","  comparison = pd.concat([comparison, current])"],"metadata":{"id":"xnseWYKKNZVX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["comparison.sort_values(by=\"Accuracy\", ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"et32XfCKQg28","executionInfo":{"status":"ok","timestamp":1699807767176,"user_tz":-180,"elapsed":227,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"e51a1ac6-c81c-4fbd-db89-df39df9a0730"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        Precision    Recall  F1-Score  Accuracy\n","CountVectorizer (1, 2)   0.716575  0.714862  0.715168  0.714862\n","CountVectorizer (1, 4)   0.713004  0.713196  0.713037  0.713196\n","CountVectorizer (1, 3)   0.713353  0.713159  0.713092  0.713159\n","CountVectorizer (1, 1)   0.704941  0.700122  0.700770  0.700122\n","CountVectorizer (2, 2)   0.675067  0.677345  0.675488  0.677345\n","CountVectorizer (2, 3)   0.669376  0.672531  0.669757  0.672531\n","CountVectorizer (2, 4)   0.667936  0.671197  0.668197  0.671197\n","CountVectorizer (3, 3)   0.568992  0.552646  0.540914  0.552646\n","CountVectorizer (3, 4)   0.565985  0.549906  0.538213  0.549906\n","CountVectorizer (4, 4)   0.513512  0.420984  0.364368  0.420984"],"text/html":["\n","  <div id=\"df-fd22efff-2f2c-4344-a39b-cc8e5184efc5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","      <th>F1-Score</th>\n","      <th>Accuracy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>CountVectorizer (1, 2)</th>\n","      <td>0.716575</td>\n","      <td>0.714862</td>\n","      <td>0.715168</td>\n","      <td>0.714862</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (1, 4)</th>\n","      <td>0.713004</td>\n","      <td>0.713196</td>\n","      <td>0.713037</td>\n","      <td>0.713196</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (1, 3)</th>\n","      <td>0.713353</td>\n","      <td>0.713159</td>\n","      <td>0.713092</td>\n","      <td>0.713159</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (1, 1)</th>\n","      <td>0.704941</td>\n","      <td>0.700122</td>\n","      <td>0.700770</td>\n","      <td>0.700122</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (2, 2)</th>\n","      <td>0.675067</td>\n","      <td>0.677345</td>\n","      <td>0.675488</td>\n","      <td>0.677345</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (2, 3)</th>\n","      <td>0.669376</td>\n","      <td>0.672531</td>\n","      <td>0.669757</td>\n","      <td>0.672531</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (2, 4)</th>\n","      <td>0.667936</td>\n","      <td>0.671197</td>\n","      <td>0.668197</td>\n","      <td>0.671197</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (3, 3)</th>\n","      <td>0.568992</td>\n","      <td>0.552646</td>\n","      <td>0.540914</td>\n","      <td>0.552646</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (3, 4)</th>\n","      <td>0.565985</td>\n","      <td>0.549906</td>\n","      <td>0.538213</td>\n","      <td>0.549906</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (4, 4)</th>\n","      <td>0.513512</td>\n","      <td>0.420984</td>\n","      <td>0.364368</td>\n","      <td>0.420984</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fd22efff-2f2c-4344-a39b-cc8e5184efc5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fd22efff-2f2c-4344-a39b-cc8e5184efc5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fd22efff-2f2c-4344-a39b-cc8e5184efc5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ec65f41f-93e5-4698-9e2a-9aaf94d921b0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ec65f41f-93e5-4698-9e2a-9aaf94d921b0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ec65f41f-93e5-4698-9e2a-9aaf94d921b0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":107}]},{"cell_type":"code","source":["for i in generate_range(1, 3):\n","  for max_df in [0.1, 0.5]:\n","    for min_df in [0, 0.01]:\n","      for max_features in [7000, 14000, 28000]:\n","        vectorizer = TfidfVectorizer(ngram_range=i, max_df=max_df, min_df=min_df, max_features=max_features)\n","\n","        vectorized_X_train = vectorizer.fit_transform(X_train)\n","        vectorized_X_test = vectorizer.transform(X_test)\n","\n","        classifier = MultinomialNB()\n","        classifier.fit(vectorized_X_train, y_train)\n","\n","        y_predicted = classifier.predict(vectorized_X_test)\n","\n","        current = pd.DataFrame(\n","          {\"Precision\": [precision_score(y_test, y_predicted, average=\"weighted\")],\n","          \"Recall\": [recall_score(y_test, y_predicted, average=\"weighted\")],\n","          \"F1-Score\": [f1_score(y_test, y_predicted, average=\"weighted\")],\n","          \"Accuracy\": [accuracy_score(y_test, y_predicted)]},\n","          index=[\"TfidfVectorizer (\" + str(i[0]) + \", \" + str(i[1]) + \") (\" + str(max_df) + \", \" + str(min_df) + \", \" + str(max_features) + \")\"])\n","\n","        comparison = pd.concat([comparison, current])"],"metadata":{"id":"hzl08PaFUGMf"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["comparison.sort_values(by=\"Accuracy\", ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"y0fGo-ocXS9n","executionInfo":{"status":"ok","timestamp":1699808019805,"user_tz":-180,"elapsed":236,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"4fa1941f-c049-49ee-a6c4-7f0376312968"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                           Precision    Recall  F1-Score  \\\n","CountVectorizer (1, 2)                      0.716575  0.714862  0.715168   \n","TfidfVectorizer (1, 2) (0.5, 0, 28000)      0.720376  0.714048  0.715539   \n","CountVectorizer (1, 4)                      0.713004  0.713196  0.713037   \n","CountVectorizer (1, 3)                      0.713353  0.713159  0.713092   \n","TfidfVectorizer (1, 2) (0.1, 0, 28000)      0.719387  0.713085  0.714796   \n","TfidfVectorizer (1, 2) (0.5, 0, 14000)      0.719215  0.712085  0.713734   \n","TfidfVectorizer (1, 2) (0.1, 0, 14000)      0.717665  0.710529  0.712412   \n","TfidfVectorizer (1, 2) (0.5, 0, 7000)       0.717267  0.709233  0.710975   \n","TfidfVectorizer (1, 2) (0.1, 0, 7000)       0.713759  0.706011  0.707963   \n","TfidfVectorizer (1, 1) (0.5, 0, 28000)      0.707400  0.701381  0.702739   \n","TfidfVectorizer (1, 1) (0.5, 0, 14000)      0.707515  0.701159  0.702597   \n","TfidfVectorizer (1, 1) (0.5, 0, 16000)      0.707183  0.700937  0.702348   \n","TfidfVectorizer (1, 1) (0.5, 0, 8000)       0.707759  0.700900  0.702420   \n","TfidfVectorizer (1, 1) (0.5, 0, 7000)       0.707496  0.700641  0.702166   \n","CountVectorizer (1, 1)                      0.704941  0.700122  0.700770   \n","TfidfVectorizer (1, 1) (0.5, 0, 2000)       0.704022  0.696604  0.698334   \n","TfidfVectorizer (1, 1) (0.1, 0, 28000)      0.699280  0.694122  0.695627   \n","TfidfVectorizer (1, 1) (0.1, 0, 8000)       0.699704  0.693974  0.695667   \n","TfidfVectorizer (1, 1) (0.1, 0, 14000)      0.699344  0.693974  0.695559   \n","TfidfVectorizer (1, 1) (0.1, 0, 16000)      0.699073  0.693789  0.695347   \n","TfidfVectorizer (1, 1) (0.1, 0, 7000)       0.699390  0.693678  0.695394   \n","TfidfVectorizer (1, 1) (0.1, 0, 2000)       0.696264  0.690234  0.692140   \n","CountVectorizer (2, 2)                      0.675067  0.677345  0.675488   \n","CountVectorizer (2, 3)                      0.669376  0.672531  0.669757   \n","CountVectorizer (2, 4)                      0.667936  0.671197  0.668197   \n","TfidfVectorizer (2, 2) (0.1, 0, 28000)      0.670704  0.668790  0.669426   \n","TfidfVectorizer (2, 2) (0.5, 0, 28000)      0.670704  0.668790  0.669426   \n","TfidfVectorizer (1, 1) (0.5, 0.01, 7000)    0.669620  0.664531  0.666357   \n","TfidfVectorizer (1, 1) (0.5, 0.01, 14000)   0.669620  0.664531  0.666357   \n","TfidfVectorizer (1, 1) (0.5, 0.01, 28000)   0.669620  0.664531  0.666357   \n","TfidfVectorizer (1, 2) (0.5, 0.01, 7000)    0.667971  0.662605  0.664247   \n","TfidfVectorizer (1, 2) (0.5, 0.01, 28000)   0.667971  0.662605  0.664247   \n","TfidfVectorizer (1, 2) (0.5, 0.01, 14000)   0.667971  0.662605  0.664247   \n","TfidfVectorizer (2, 2) (0.5, 0, 14000)      0.664300  0.661272  0.662225   \n","TfidfVectorizer (2, 2) (0.1, 0, 14000)      0.664300  0.661272  0.662225   \n","TfidfVectorizer (1, 2) (0.1, 0.01, 28000)   0.657893  0.653087  0.654953   \n","TfidfVectorizer (1, 2) (0.1, 0.01, 14000)   0.657893  0.653087  0.654953   \n","TfidfVectorizer (1, 2) (0.1, 0.01, 7000)    0.657893  0.653087  0.654953   \n","TfidfVectorizer (2, 2) (0.5, 0, 7000)       0.653865  0.649198  0.650456   \n","TfidfVectorizer (2, 2) (0.1, 0, 7000)       0.653865  0.649198  0.650456   \n","TfidfVectorizer (1, 1) (0.1, 0.01, 16000)   0.653217  0.648383  0.650224   \n","TfidfVectorizer (1, 1) (0.1, 0.01, 28000)   0.653217  0.648383  0.650224   \n","TfidfVectorizer (1, 1) (0.1, 0.01, 14000)   0.653217  0.648383  0.650224   \n","TfidfVectorizer (1, 1) (0.1, 0.01, 7000)    0.653217  0.648383  0.650224   \n","TfidfVectorizer (1, 1) (0.1, 0.01, 2000)    0.653217  0.648383  0.650224   \n","TfidfVectorizer (1, 1) (0.1, 0.01, 8000)    0.653217  0.648383  0.650224   \n","CountVectorizer (3, 3)                      0.568992  0.552646  0.540914   \n","CountVectorizer (3, 4)                      0.565985  0.549906  0.538213   \n","TfidfVectorizer (2, 2) (0.1, 0.01, 7000)    0.510577  0.446983  0.417119   \n","TfidfVectorizer (2, 2) (0.1, 0.01, 14000)   0.510577  0.446983  0.417119   \n","TfidfVectorizer (2, 2) (0.1, 0.01, 28000)   0.510577  0.446983  0.417119   \n","TfidfVectorizer (2, 2) (0.5, 0.01, 7000)    0.510577  0.446983  0.417119   \n","TfidfVectorizer (2, 2) (0.5, 0.01, 14000)   0.510577  0.446983  0.417119   \n","TfidfVectorizer (2, 2) (0.5, 0.01, 28000)   0.510577  0.446983  0.417119   \n","CountVectorizer (4, 4)                      0.513512  0.420984  0.364368   \n","\n","                                           Accuracy  \n","CountVectorizer (1, 2)                     0.714862  \n","TfidfVectorizer (1, 2) (0.5, 0, 28000)     0.714048  \n","CountVectorizer (1, 4)                     0.713196  \n","CountVectorizer (1, 3)                     0.713159  \n","TfidfVectorizer (1, 2) (0.1, 0, 28000)     0.713085  \n","TfidfVectorizer (1, 2) (0.5, 0, 14000)     0.712085  \n","TfidfVectorizer (1, 2) (0.1, 0, 14000)     0.710529  \n","TfidfVectorizer (1, 2) (0.5, 0, 7000)      0.709233  \n","TfidfVectorizer (1, 2) (0.1, 0, 7000)      0.706011  \n","TfidfVectorizer (1, 1) (0.5, 0, 28000)     0.701381  \n","TfidfVectorizer (1, 1) (0.5, 0, 14000)     0.701159  \n","TfidfVectorizer (1, 1) (0.5, 0, 16000)     0.700937  \n","TfidfVectorizer (1, 1) (0.5, 0, 8000)      0.700900  \n","TfidfVectorizer (1, 1) (0.5, 0, 7000)      0.700641  \n","CountVectorizer (1, 1)                     0.700122  \n","TfidfVectorizer (1, 1) (0.5, 0, 2000)      0.696604  \n","TfidfVectorizer (1, 1) (0.1, 0, 28000)     0.694122  \n","TfidfVectorizer (1, 1) (0.1, 0, 8000)      0.693974  \n","TfidfVectorizer (1, 1) (0.1, 0, 14000)     0.693974  \n","TfidfVectorizer (1, 1) (0.1, 0, 16000)     0.693789  \n","TfidfVectorizer (1, 1) (0.1, 0, 7000)      0.693678  \n","TfidfVectorizer (1, 1) (0.1, 0, 2000)      0.690234  \n","CountVectorizer (2, 2)                     0.677345  \n","CountVectorizer (2, 3)                     0.672531  \n","CountVectorizer (2, 4)                     0.671197  \n","TfidfVectorizer (2, 2) (0.1, 0, 28000)     0.668790  \n","TfidfVectorizer (2, 2) (0.5, 0, 28000)     0.668790  \n","TfidfVectorizer (1, 1) (0.5, 0.01, 7000)   0.664531  \n","TfidfVectorizer (1, 1) (0.5, 0.01, 14000)  0.664531  \n","TfidfVectorizer (1, 1) (0.5, 0.01, 28000)  0.664531  \n","TfidfVectorizer (1, 2) (0.5, 0.01, 7000)   0.662605  \n","TfidfVectorizer (1, 2) (0.5, 0.01, 28000)  0.662605  \n","TfidfVectorizer (1, 2) (0.5, 0.01, 14000)  0.662605  \n","TfidfVectorizer (2, 2) (0.5, 0, 14000)     0.661272  \n","TfidfVectorizer (2, 2) (0.1, 0, 14000)     0.661272  \n","TfidfVectorizer (1, 2) (0.1, 0.01, 28000)  0.653087  \n","TfidfVectorizer (1, 2) (0.1, 0.01, 14000)  0.653087  \n","TfidfVectorizer (1, 2) (0.1, 0.01, 7000)   0.653087  \n","TfidfVectorizer (2, 2) (0.5, 0, 7000)      0.649198  \n","TfidfVectorizer (2, 2) (0.1, 0, 7000)      0.649198  \n","TfidfVectorizer (1, 1) (0.1, 0.01, 16000)  0.648383  \n","TfidfVectorizer (1, 1) (0.1, 0.01, 28000)  0.648383  \n","TfidfVectorizer (1, 1) (0.1, 0.01, 14000)  0.648383  \n","TfidfVectorizer (1, 1) (0.1, 0.01, 7000)   0.648383  \n","TfidfVectorizer (1, 1) (0.1, 0.01, 2000)   0.648383  \n","TfidfVectorizer (1, 1) (0.1, 0.01, 8000)   0.648383  \n","CountVectorizer (3, 3)                     0.552646  \n","CountVectorizer (3, 4)                     0.549906  \n","TfidfVectorizer (2, 2) (0.1, 0.01, 7000)   0.446983  \n","TfidfVectorizer (2, 2) (0.1, 0.01, 14000)  0.446983  \n","TfidfVectorizer (2, 2) (0.1, 0.01, 28000)  0.446983  \n","TfidfVectorizer (2, 2) (0.5, 0.01, 7000)   0.446983  \n","TfidfVectorizer (2, 2) (0.5, 0.01, 14000)  0.446983  \n","TfidfVectorizer (2, 2) (0.5, 0.01, 28000)  0.446983  \n","CountVectorizer (4, 4)                     0.420984  "],"text/html":["\n","  <div id=\"df-7e7ab9c3-9e0c-499a-ae79-e981d71d98b9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","      <th>F1-Score</th>\n","      <th>Accuracy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>CountVectorizer (1, 2)</th>\n","      <td>0.716575</td>\n","      <td>0.714862</td>\n","      <td>0.715168</td>\n","      <td>0.714862</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.5, 0, 28000)</th>\n","      <td>0.720376</td>\n","      <td>0.714048</td>\n","      <td>0.715539</td>\n","      <td>0.714048</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (1, 4)</th>\n","      <td>0.713004</td>\n","      <td>0.713196</td>\n","      <td>0.713037</td>\n","      <td>0.713196</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (1, 3)</th>\n","      <td>0.713353</td>\n","      <td>0.713159</td>\n","      <td>0.713092</td>\n","      <td>0.713159</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.1, 0, 28000)</th>\n","      <td>0.719387</td>\n","      <td>0.713085</td>\n","      <td>0.714796</td>\n","      <td>0.713085</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.5, 0, 14000)</th>\n","      <td>0.719215</td>\n","      <td>0.712085</td>\n","      <td>0.713734</td>\n","      <td>0.712085</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.1, 0, 14000)</th>\n","      <td>0.717665</td>\n","      <td>0.710529</td>\n","      <td>0.712412</td>\n","      <td>0.710529</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.5, 0, 7000)</th>\n","      <td>0.717267</td>\n","      <td>0.709233</td>\n","      <td>0.710975</td>\n","      <td>0.709233</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.1, 0, 7000)</th>\n","      <td>0.713759</td>\n","      <td>0.706011</td>\n","      <td>0.707963</td>\n","      <td>0.706011</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.5, 0, 28000)</th>\n","      <td>0.707400</td>\n","      <td>0.701381</td>\n","      <td>0.702739</td>\n","      <td>0.701381</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.5, 0, 14000)</th>\n","      <td>0.707515</td>\n","      <td>0.701159</td>\n","      <td>0.702597</td>\n","      <td>0.701159</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.5, 0, 16000)</th>\n","      <td>0.707183</td>\n","      <td>0.700937</td>\n","      <td>0.702348</td>\n","      <td>0.700937</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.5, 0, 8000)</th>\n","      <td>0.707759</td>\n","      <td>0.700900</td>\n","      <td>0.702420</td>\n","      <td>0.700900</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.5, 0, 7000)</th>\n","      <td>0.707496</td>\n","      <td>0.700641</td>\n","      <td>0.702166</td>\n","      <td>0.700641</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (1, 1)</th>\n","      <td>0.704941</td>\n","      <td>0.700122</td>\n","      <td>0.700770</td>\n","      <td>0.700122</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.5, 0, 2000)</th>\n","      <td>0.704022</td>\n","      <td>0.696604</td>\n","      <td>0.698334</td>\n","      <td>0.696604</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.1, 0, 28000)</th>\n","      <td>0.699280</td>\n","      <td>0.694122</td>\n","      <td>0.695627</td>\n","      <td>0.694122</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.1, 0, 8000)</th>\n","      <td>0.699704</td>\n","      <td>0.693974</td>\n","      <td>0.695667</td>\n","      <td>0.693974</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.1, 0, 14000)</th>\n","      <td>0.699344</td>\n","      <td>0.693974</td>\n","      <td>0.695559</td>\n","      <td>0.693974</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.1, 0, 16000)</th>\n","      <td>0.699073</td>\n","      <td>0.693789</td>\n","      <td>0.695347</td>\n","      <td>0.693789</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.1, 0, 7000)</th>\n","      <td>0.699390</td>\n","      <td>0.693678</td>\n","      <td>0.695394</td>\n","      <td>0.693678</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.1, 0, 2000)</th>\n","      <td>0.696264</td>\n","      <td>0.690234</td>\n","      <td>0.692140</td>\n","      <td>0.690234</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (2, 2)</th>\n","      <td>0.675067</td>\n","      <td>0.677345</td>\n","      <td>0.675488</td>\n","      <td>0.677345</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (2, 3)</th>\n","      <td>0.669376</td>\n","      <td>0.672531</td>\n","      <td>0.669757</td>\n","      <td>0.672531</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (2, 4)</th>\n","      <td>0.667936</td>\n","      <td>0.671197</td>\n","      <td>0.668197</td>\n","      <td>0.671197</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (2, 2) (0.1, 0, 28000)</th>\n","      <td>0.670704</td>\n","      <td>0.668790</td>\n","      <td>0.669426</td>\n","      <td>0.668790</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (2, 2) (0.5, 0, 28000)</th>\n","      <td>0.670704</td>\n","      <td>0.668790</td>\n","      <td>0.669426</td>\n","      <td>0.668790</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.5, 0.01, 7000)</th>\n","      <td>0.669620</td>\n","      <td>0.664531</td>\n","      <td>0.666357</td>\n","      <td>0.664531</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.5, 0.01, 14000)</th>\n","      <td>0.669620</td>\n","      <td>0.664531</td>\n","      <td>0.666357</td>\n","      <td>0.664531</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.5, 0.01, 28000)</th>\n","      <td>0.669620</td>\n","      <td>0.664531</td>\n","      <td>0.666357</td>\n","      <td>0.664531</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.5, 0.01, 7000)</th>\n","      <td>0.667971</td>\n","      <td>0.662605</td>\n","      <td>0.664247</td>\n","      <td>0.662605</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.5, 0.01, 28000)</th>\n","      <td>0.667971</td>\n","      <td>0.662605</td>\n","      <td>0.664247</td>\n","      <td>0.662605</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.5, 0.01, 14000)</th>\n","      <td>0.667971</td>\n","      <td>0.662605</td>\n","      <td>0.664247</td>\n","      <td>0.662605</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (2, 2) (0.5, 0, 14000)</th>\n","      <td>0.664300</td>\n","      <td>0.661272</td>\n","      <td>0.662225</td>\n","      <td>0.661272</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (2, 2) (0.1, 0, 14000)</th>\n","      <td>0.664300</td>\n","      <td>0.661272</td>\n","      <td>0.662225</td>\n","      <td>0.661272</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.1, 0.01, 28000)</th>\n","      <td>0.657893</td>\n","      <td>0.653087</td>\n","      <td>0.654953</td>\n","      <td>0.653087</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.1, 0.01, 14000)</th>\n","      <td>0.657893</td>\n","      <td>0.653087</td>\n","      <td>0.654953</td>\n","      <td>0.653087</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.1, 0.01, 7000)</th>\n","      <td>0.657893</td>\n","      <td>0.653087</td>\n","      <td>0.654953</td>\n","      <td>0.653087</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (2, 2) (0.5, 0, 7000)</th>\n","      <td>0.653865</td>\n","      <td>0.649198</td>\n","      <td>0.650456</td>\n","      <td>0.649198</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (2, 2) (0.1, 0, 7000)</th>\n","      <td>0.653865</td>\n","      <td>0.649198</td>\n","      <td>0.650456</td>\n","      <td>0.649198</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.1, 0.01, 16000)</th>\n","      <td>0.653217</td>\n","      <td>0.648383</td>\n","      <td>0.650224</td>\n","      <td>0.648383</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.1, 0.01, 28000)</th>\n","      <td>0.653217</td>\n","      <td>0.648383</td>\n","      <td>0.650224</td>\n","      <td>0.648383</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.1, 0.01, 14000)</th>\n","      <td>0.653217</td>\n","      <td>0.648383</td>\n","      <td>0.650224</td>\n","      <td>0.648383</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.1, 0.01, 7000)</th>\n","      <td>0.653217</td>\n","      <td>0.648383</td>\n","      <td>0.650224</td>\n","      <td>0.648383</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.1, 0.01, 2000)</th>\n","      <td>0.653217</td>\n","      <td>0.648383</td>\n","      <td>0.650224</td>\n","      <td>0.648383</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.1, 0.01, 8000)</th>\n","      <td>0.653217</td>\n","      <td>0.648383</td>\n","      <td>0.650224</td>\n","      <td>0.648383</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (3, 3)</th>\n","      <td>0.568992</td>\n","      <td>0.552646</td>\n","      <td>0.540914</td>\n","      <td>0.552646</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (3, 4)</th>\n","      <td>0.565985</td>\n","      <td>0.549906</td>\n","      <td>0.538213</td>\n","      <td>0.549906</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (2, 2) (0.1, 0.01, 7000)</th>\n","      <td>0.510577</td>\n","      <td>0.446983</td>\n","      <td>0.417119</td>\n","      <td>0.446983</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (2, 2) (0.1, 0.01, 14000)</th>\n","      <td>0.510577</td>\n","      <td>0.446983</td>\n","      <td>0.417119</td>\n","      <td>0.446983</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (2, 2) (0.1, 0.01, 28000)</th>\n","      <td>0.510577</td>\n","      <td>0.446983</td>\n","      <td>0.417119</td>\n","      <td>0.446983</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (2, 2) (0.5, 0.01, 7000)</th>\n","      <td>0.510577</td>\n","      <td>0.446983</td>\n","      <td>0.417119</td>\n","      <td>0.446983</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (2, 2) (0.5, 0.01, 14000)</th>\n","      <td>0.510577</td>\n","      <td>0.446983</td>\n","      <td>0.417119</td>\n","      <td>0.446983</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (2, 2) (0.5, 0.01, 28000)</th>\n","      <td>0.510577</td>\n","      <td>0.446983</td>\n","      <td>0.417119</td>\n","      <td>0.446983</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (4, 4)</th>\n","      <td>0.513512</td>\n","      <td>0.420984</td>\n","      <td>0.364368</td>\n","      <td>0.420984</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7e7ab9c3-9e0c-499a-ae79-e981d71d98b9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7e7ab9c3-9e0c-499a-ae79-e981d71d98b9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7e7ab9c3-9e0c-499a-ae79-e981d71d98b9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d7bdbbeb-9383-4309-b96c-a5150cf92b60\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d7bdbbeb-9383-4309-b96c-a5150cf92b60')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d7bdbbeb-9383-4309-b96c-a5150cf92b60 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":110}]},{"cell_type":"code","source":["for i in generate_range(1, 4):\n","  vectorizer = CountVectorizer(analyzer=\"char\", ngram_range=i)\n","\n","  vectorized_X_train = vectorizer.fit_transform(X_train)\n","  vectorized_X_test = vectorizer.transform(X_test)\n","\n","  classifier = MultinomialNB()\n","  classifier.fit(vectorized_X_train, y_train)\n","\n","  y_predicted = classifier.predict(vectorized_X_test)\n","\n","  current = pd.DataFrame(\n","    {\"Precision\": [precision_score(y_test, y_predicted, average=\"weighted\")],\n","    \"Recall\": [recall_score(y_test, y_predicted, average=\"weighted\")],\n","    \"F1-Score\": [f1_score(y_test, y_predicted, average=\"weighted\")],\n","    \"Accuracy\": [accuracy_score(y_test, y_predicted)]},\n","    index=[\"CountVectorizer with char analyzer (\" + str(i[0]) + \", \" + str(i[1]) + \")\"])\n","\n","  comparison = pd.concat([comparison, current])"],"metadata":{"id":"OKDDmCGpYDMl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["comparison.sort_values(by=\"Accuracy\", ascending=False).head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"t8ZNPTyyaCq9","executionInfo":{"status":"ok","timestamp":1699808089822,"user_tz":-180,"elapsed":253,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"f23efc16-512d-43b0-b7c8-67102f46adea"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                        Precision    Recall  F1-Score  \\\n","CountVectorizer (1, 2)                   0.716575  0.714862  0.715168   \n","TfidfVectorizer (1, 2) (0.5, 0, 28000)   0.720376  0.714048  0.715539   \n","CountVectorizer (1, 4)                   0.713004  0.713196  0.713037   \n","CountVectorizer (1, 3)                   0.713353  0.713159  0.713092   \n","TfidfVectorizer (1, 2) (0.1, 0, 28000)   0.719387  0.713085  0.714796   \n","TfidfVectorizer (1, 2) (0.5, 0, 14000)   0.719215  0.712085  0.713734   \n","TfidfVectorizer (1, 2) (0.1, 0, 14000)   0.717665  0.710529  0.712412   \n","TfidfVectorizer (1, 2) (0.5, 0, 7000)    0.717267  0.709233  0.710975   \n","TfidfVectorizer (1, 2) (0.1, 0, 7000)    0.713759  0.706011  0.707963   \n","TfidfVectorizer (1, 1) (0.5, 0, 28000)   0.707400  0.701381  0.702739   \n","\n","                                        Accuracy  \n","CountVectorizer (1, 2)                  0.714862  \n","TfidfVectorizer (1, 2) (0.5, 0, 28000)  0.714048  \n","CountVectorizer (1, 4)                  0.713196  \n","CountVectorizer (1, 3)                  0.713159  \n","TfidfVectorizer (1, 2) (0.1, 0, 28000)  0.713085  \n","TfidfVectorizer (1, 2) (0.5, 0, 14000)  0.712085  \n","TfidfVectorizer (1, 2) (0.1, 0, 14000)  0.710529  \n","TfidfVectorizer (1, 2) (0.5, 0, 7000)   0.709233  \n","TfidfVectorizer (1, 2) (0.1, 0, 7000)   0.706011  \n","TfidfVectorizer (1, 1) (0.5, 0, 28000)  0.701381  "],"text/html":["\n","  <div id=\"df-0f083192-0e42-4ec7-bc7a-b2a4dc1f7338\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Precision</th>\n","      <th>Recall</th>\n","      <th>F1-Score</th>\n","      <th>Accuracy</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>CountVectorizer (1, 2)</th>\n","      <td>0.716575</td>\n","      <td>0.714862</td>\n","      <td>0.715168</td>\n","      <td>0.714862</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.5, 0, 28000)</th>\n","      <td>0.720376</td>\n","      <td>0.714048</td>\n","      <td>0.715539</td>\n","      <td>0.714048</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (1, 4)</th>\n","      <td>0.713004</td>\n","      <td>0.713196</td>\n","      <td>0.713037</td>\n","      <td>0.713196</td>\n","    </tr>\n","    <tr>\n","      <th>CountVectorizer (1, 3)</th>\n","      <td>0.713353</td>\n","      <td>0.713159</td>\n","      <td>0.713092</td>\n","      <td>0.713159</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.1, 0, 28000)</th>\n","      <td>0.719387</td>\n","      <td>0.713085</td>\n","      <td>0.714796</td>\n","      <td>0.713085</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.5, 0, 14000)</th>\n","      <td>0.719215</td>\n","      <td>0.712085</td>\n","      <td>0.713734</td>\n","      <td>0.712085</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.1, 0, 14000)</th>\n","      <td>0.717665</td>\n","      <td>0.710529</td>\n","      <td>0.712412</td>\n","      <td>0.710529</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.5, 0, 7000)</th>\n","      <td>0.717267</td>\n","      <td>0.709233</td>\n","      <td>0.710975</td>\n","      <td>0.709233</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 2) (0.1, 0, 7000)</th>\n","      <td>0.713759</td>\n","      <td>0.706011</td>\n","      <td>0.707963</td>\n","      <td>0.706011</td>\n","    </tr>\n","    <tr>\n","      <th>TfidfVectorizer (1, 1) (0.5, 0, 28000)</th>\n","      <td>0.707400</td>\n","      <td>0.701381</td>\n","      <td>0.702739</td>\n","      <td>0.701381</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0f083192-0e42-4ec7-bc7a-b2a4dc1f7338')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0f083192-0e42-4ec7-bc7a-b2a4dc1f7338 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0f083192-0e42-4ec7-bc7a-b2a4dc1f7338');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7457425f-a09c-4f93-8506-a4537aa58298\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7457425f-a09c-4f93-8506-a4537aa58298')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7457425f-a09c-4f93-8506-a4537aa58298 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":113}]},{"cell_type":"markdown","metadata":{"id":"5QYTwyMtWhAZ"},"source":["## Задание 5.2 Регулярные выражения\n","\n","Регулярные выражения - способ поиска и анализа строк. Например, можно понять, какие даты в наборе строк представлены в формате DD/MM/YYYY, а какие - в других форматах.\n","\n","Или бывает, например, что перед работой с текстом, надо почистить его от своеобразного мусора: упоминаний пользователей, url и так далее.\n","\n","Навык полезный, давайте в нём тоже потренируемся.\n","\n","Для работы с регулярными выражениями есть библиотека **re**"]},{"cell_type":"code","metadata":{"id":"VaUW5S4gWhAb","executionInfo":{"status":"ok","timestamp":1699878912705,"user_tz":-180,"elapsed":346,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}}},"source":["import re"],"execution_count":2,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"D6aYh7Osl8xr"},"source":["В регулярных выражениях, кроме привычных символов-букв, есть специальные символы:\n","* **а?** - ноль или один символ **а**\n","* **а+** - один или более символов **а**\n","* **а\\*** - ноль или более символов **а** (не путать с +)\n","* **.** - любое количество любого символа\n"]},{"cell_type":"code","source":["result = re.findall('a?b.', 'aabbсabbcbb')\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o0Wh4EZcUVWB","executionInfo":{"status":"ok","timestamp":1699635976604,"user_tz":-180,"elapsed":11,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"722c8c7d-5325-4b35-eeb1-368aa8433d4d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['abb', 'abb', 'bb']\n"]}]},{"cell_type":"code","source":["result = re.findall('a*b.', 'aabbсabbcbb')\n","print(result)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ZgN7gjUwWGON","executionInfo":{"status":"ok","timestamp":1699635976605,"user_tz":-180,"elapsed":10,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"d4238c5c-f68b-4e47-cfde-475c9304176b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['aabb', 'abb', 'bb']\n"]}]},{"cell_type":"code","source":["result = re.findall('a+b.', 'aabbсabbcbb')\n","print(result)"],"metadata":{"id":"izXJKMwJWKyY","executionInfo":{"status":"ok","timestamp":1699635976605,"user_tz":-180,"elapsed":9,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"e439f7bc-9732-433d-a0f2-836e7273d1c7","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['aabb', 'abb']\n"]}]},{"cell_type":"markdown","metadata":{"id":"q7zOFFA3l_KQ"},"source":["Рассмотрим подробно несколько наиболее полезных функций:"]},{"cell_type":"markdown","metadata":{"id":"DbJrUpARWhAd"},"source":["### findall\n","возвращает список всех найденных непересекающихся совпадений.\n","\n","Регулярное выражение **ab+c.**:\n","* **a** - просто символ **a**\n","* **b+** - один или более символов **b**\n","* **c** - просто символ **c**\n","* **.** - любой символ\n"]},{"cell_type":"code","metadata":{"id":"2athHzKuWhAd","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699635976605,"user_tz":-180,"elapsed":8,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"bd597025-3cff-42d1-fa14-8ced03e94893"},"source":["result = re.findall('ab+c.', 'abcdefghijkabcabcxabc')\n","print(result)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['abcd', 'abca']\n"]}]},{"cell_type":"markdown","metadata":{"id":"A9FpIw5RWhAf"},"source":["Вопрос на внимательность: почему нет abcx?"]},{"cell_type":"markdown","source":["Потому что методом findall первее было найдено \"abca\", имеющее пересечение с \"abcx\" по первой букве."],"metadata":{"id":"QjALXfNYPh3m"}},{"cell_type":"markdown","metadata":{"id":"B5ttzoxEWhAg"},"source":["**Задание**: вернуть список первых двух букв каждого слова в строке, состоящей из нескольких слов."]},{"cell_type":"code","metadata":{"id":"7ZR2AEq3WhAg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699878932236,"user_tz":-180,"elapsed":317,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"c02ca73e-ab66-4588-8a59-100524a40212"},"source":["s = \"Для получения статистики по определенному файлу до определенного коммита, вы можете использовать следующую команду Санкт-Петербург\"\n","re.findall(\"^..?|\\s+..?\", s)"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Дл',\n"," ' по',\n"," ' ст',\n"," ' по',\n"," ' оп',\n"," ' фа',\n"," ' до',\n"," ' оп',\n"," ' ко',\n"," ' вы',\n"," ' мо',\n"," ' ис',\n"," ' сл',\n"," ' ко',\n"," ' Са']"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"MI18l-l9WhAk"},"source":["### split\n","разделяет строку по заданному шаблону\n"]},{"cell_type":"code","metadata":{"id":"sVKdRoc1WhAl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699635976605,"user_tz":-180,"elapsed":7,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"4f6e4344-1254-4122-8292-bf4d70912efb"},"source":["result = re.split(',', 'itsy, bitsy, teenie, weenie')\n","print(result)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['itsy', ' bitsy', ' teenie', ' weenie']\n"]}]},{"cell_type":"markdown","metadata":{"id":"10u5efuSWhAm"},"source":["можно указать максимальное количество разбиений"]},{"cell_type":"code","metadata":{"id":"9U9EQZMwWhAn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699635976605,"user_tz":-180,"elapsed":7,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"cd973550-b494-43bc-c2a1-163ee944c705"},"source":["result = re.split(',', 'itsy, bitsy, teenie, weenie', maxsplit=2)\n","print(result)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['itsy', ' bitsy', ' teenie, weenie']\n"]}]},{"cell_type":"markdown","metadata":{"id":"0EMcMyflWhAp"},"source":["**Задание**: разбейте строку, состоящую из нескольких предложений, по точкам, но не более чем на 3 предложения."]},{"cell_type":"code","metadata":{"id":"dVgPSjEOWhAp","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699638551103,"user_tz":-180,"elapsed":343,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"0bb3f448-51d1-4125-b68c-5c8541b8e6ea"},"source":["s = \"Важно выбрать один стиль и придерживаться его во всём проекте для обеспечения консистентности.\"\\\n","    \"В контексте Nodejs и большинства современных JavaScript-фреймворков, таких как React, Vue или Angular, чаще всего встречается использование camelCase и PascalCase.\"\\\n","    \"PascalCase, как правило, применяется для именования файлов, которые экспортируют классы, React-компоненты или конструкторы, тогда как camelCase используется для остальных модулей и утилит.\"\\\n","    \"Kebab-case может использоваться в проектах, где есть строгие URL-сопоставления, например, в некоторых веб-компонентах.\"\n","\n","re.split(\"\\.\", s, maxsplit=2)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Важно выбрать один стиль и придерживаться его во всём проекте для обеспечения консистентности',\n"," 'В контексте Nodejs и большинства современных JavaScript-фреймворков, таких как React, Vue или Angular, чаще всего встречается использование camelCase и PascalCase',\n"," 'PascalCase, как правило, применяется для именования файлов, которые экспортируют классы, React-компоненты или конструкторы, тогда как camelCase используется для остальных модулей и утилит.Kebab-case может использоваться в проектах, где есть строгие URL-сопоставления, например, в некоторых веб-компонентах.']"]},"metadata":{},"execution_count":44}]},{"cell_type":"markdown","metadata":{"id":"1wrEGqBSWhAr"},"source":["### sub\n","ищет шаблон в строке и заменяет все совпадения на указанную подстроку\n","\n","параметры: (pattern, repl, string)"]},{"cell_type":"code","metadata":{"id":"az3KxKWwWhAr","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699635976605,"user_tz":-180,"elapsed":6,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"45c7b9ec-894d-4c6c-cd2d-e75dce4f19b1"},"source":["result = re.sub('a', 'b', 'abcabc')\n","print (result)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["bbcbbc\n"]}]},{"cell_type":"markdown","metadata":{"id":"qD0n7_HPWhAt"},"source":["**Задание**: напишите регулярное выражение, которое позволит заменить все цифры в строке на \"DIG\"."]},{"cell_type":"code","metadata":{"id":"s_Sdu7xlWhAu","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699637897470,"user_tz":-180,"elapsed":362,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"f2cb4a67-d643-4572-efb9-16d38c5498e3"},"source":["result = re.sub(\"\\d\", \"DIG\", \"12 тонн; 2 килограмма; 4 километра; 403 часа\")\n","print(result)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["DIGDIG тонн; DIG килограмма; DIG километра; DIGDIGDIG часа\n"]}]},{"cell_type":"markdown","metadata":{"id":"b8__oi1PWhAv"},"source":["**Задание**: напишите  регулярное выражение, которое позволит убрать url из строки."]},{"cell_type":"code","metadata":{"id":"KwNS9zt4WhAv","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699879506138,"user_tz":-180,"elapsed":755,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"c94c7c6e-3a4a-4785-fe06-bcc7f0493b7e"},"source":["s = \"Среди профессионалов IT сферы популярностью пользуется https://stackoverflow.com, где можно найти ответы на многие технические вопросы. \"\\\n","    \"Не менее важен и сайт https://github.com, который служит хранилищем для кода и проектов.\"\n","\n","result = re.sub(\"(http|https|ftp)://[^\\s/$.?#].[^\\s]*\\\\b\", \"\", s)\n","print(result)"],"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Среди профессионалов IT сферы популярностью пользуется , где можно найти ответы на многие технические вопросы. Не менее важен и сайт , который служит хранилищем для кода и проектов.\n"]}]},{"cell_type":"markdown","metadata":{"id":"gStgBJy2WhAx"},"source":["### compile\n","компилирует регулярное выражение в отдельный объект"]},{"cell_type":"code","metadata":{"id":"JstTupisWhAy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699639083360,"user_tz":-180,"elapsed":353,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"9f3a2605-364f-4407-9f27-a5bbfbdb484d"},"source":["# Пример: построение списка всех слов строки:\n","prog = re.compile('[А-Яа-яё\\-]+')\n","prog.findall(\"Слова? Да, больше, ещё больше слов! Что-то ещё.\")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Слова', 'Да', 'больше', 'ещё', 'больше', 'слов', 'Что-то', 'ещё']"]},"metadata":{},"execution_count":63}]},{"cell_type":"markdown","metadata":{"id":"WXEXc3G0WhA2"},"source":["**Задание**: для выбранной строки постройте список слов, которые длиннее трех символов."]},{"cell_type":"code","metadata":{"id":"nFvnIWbUWhA2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1699639737016,"user_tz":-180,"elapsed":353,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"af3277a8-12d1-4068-e311-78365c06b7f1"},"source":["prog = re.compile(\"[\\w-]{4,}\")\n","prog.findall(\"Слова? Да, больше, ещё больше слов! И что-то ещё.\")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['Слова', 'больше', 'больше', 'слов', 'что-то']"]},"metadata":{},"execution_count":87}]},{"cell_type":"markdown","metadata":{"id":"SQDNZ3HQWhA3"},"source":["**Задание**: вернуть список доменов (@gmail.com) из списка адресов электронной почты:\n","\n","```\n","abc.test@gmail.com, xyz@test.in, test.first@analyticsvidhya.com, first.test@rest.biz\n","```"]},{"cell_type":"code","source":["prog = re.compile(\"@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\")\n","prog.findall(\"abc.test@gmail.com, xyz@test.in, test.first@analyticsvidhya.com, first.test@rest.biz\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"acYkU3ZKYoUE","executionInfo":{"status":"ok","timestamp":1699879511643,"user_tz":-180,"elapsed":413,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"16b0a135-e269-435d-93dd-1339ac484a86"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['@gmail.com', '@test.in', '@analyticsvidhya.com', '@rest.biz']"]},"metadata":{},"execution_count":11}]}]}