{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1eX21oBHRAzNr3PimxhMJENF3yeBC2DBe","timestamp":1697206978194},{"file_id":"1qZEvjR2ZYlmS30WoR2COSQeo_YACa3Nf","timestamp":1601819416413}]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.4"}},"cells":[{"cell_type":"markdown","metadata":{"id":"LkTpaRRWZNc3"},"source":["# Линейная регрессия\n"]},{"cell_type":"markdown","metadata":{"id":"Ro-ttLpiZNdC"},"source":["Линейные методы предполагают, что между признаками объекта и целевой переменной существует линейная зависимость, то есть:\n","$$ \\hat{y} = w_1 x_1 + w_2 x_2 + ... + w_k x_k + b,$$\n","где $\\hat{y}$ - целевая переменная (что мы хотим предсказать), $x_i$ - i-ый признак объекта $x$, $w_i$ - вес $i$-го признака, $b$ - bias (смещение, свободный член).\n","\n","В задаче линейной регрессии $\\hat{y}$ - это действительное число.\n","\n","Часто для упрощения записи вводят дополнительный фиктивный признак $x_0$, который всегда равен 1, тогда bias - вес этого признака. В этом случае формула может быть записана как скалярное произведение:\n","$$ \\hat{y} = <w, x> $$\n","\n","В матричной форме формулу можно переписать следующим образом:\n","$$ \\hat{y} = Xw,$$\n","$\\hat{y}$ - вектор значений целевой переменной размера $n$, $X$ - матрица значений признаков объектов размера $n \\times k$, w - вектор весов размера $k$. То есть в наших данных имеется $n$ объектов, каждый их которых описан $k$ признаками.\n","\n","Таким образом, в матричной форме модель задаётся следующим образом:\n","$$ y = Xw + \\epsilon$$\n","\n","Важно отметить, что параметрами этой модели являются веса $w$. Когда говорят об обучении какого-либо алгоритма машинного обучения, как правило, имеют в виду настройку весов, т.е. параметров модели.  "]},{"cell_type":"markdown","metadata":{"id":"ixnX1G4yDVcG"},"source":["На практике $\\hat{y} $ может отличается от реальных значений, которые принимает целевая переменная $y$. Разницу между реальным значением и предсказанным, обозначим как $\\epsilon$ - вектор значений случайной переменной, соответствующая случайной, непрогнозируемой ошибке модели. Ограничения, которые накладываются на эту модель:\n","* математическое ожидание случайных ошибок $\\epsilon$ равно нулю,\n","* дисперсия случайных ошибок одинакова и конечна,\n","* случайные ошибки не скоррелированы."]},{"cell_type":"markdown","metadata":{"id":"HJyN9MkMDTod"},"source":["Один из способов вычислить значения параметров модели, давно знаком - это наименьших квадратов, который минимизирует среднеквадратичную ошибку между реальным значением зависимой переменной и прогнозом, выданным моделью. Решение по методу наименьших квадратов дает:\n","$$ w = (X^TX)^{-1}X^TY $$"]},{"cell_type":"markdown","metadata":{"id":"Y5HVNycSZNc5"},"source":["Загрузим необходимые библиотеки"]},{"cell_type":"code","metadata":{"id":"Lrhz2sFvZNc7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697453964877,"user_tz":-180,"elapsed":25926,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"e899b26b-8653-41ba-a704-57b365c5f7b8"},"source":["import os\n","import operator\n","import numpy as np\n","import pandas as pd\n","import sklearn.metrics\n","from google.colab import drive\n","from matplotlib import pyplot as plt\n","from sklearn.linear_model import LinearRegression\n","from sklearn.pipeline import Pipeline\n","from sklearn.preprocessing import PolynomialFeatures\n","from sklearn.model_selection import cross_val_score\n","from sklearn.model_selection import train_test_split\n","drive.mount(\"/content/drive\")\n","plt.style.use('ggplot')\n","%matplotlib inline"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","metadata":{"id":"dFQqRj1lZNdg"},"source":["## Оценка результатов\n","\n","Чтобы оценить качество работы алгоритма нам необходимо применяют разные метрики. Наиболее частые метрики средневадратичная и средняя абсолютная ошибки. Вычислим эти метрики на обучающей и на тестовой выборках.\n","\n"," * *mean_absolute_error* - средняя абсолютная ошибка $|y_i - \\hat{y}_i|$\n"," * *mean_squared_error* - средняя квадратичная ошибка $(y_i - \\hat{y}_i)^2$"]},{"cell_type":"markdown","metadata":{"id":"2sEDF-oXRsVw"},"source":["## Задание 3.1"]},{"cell_type":"markdown","metadata":{"id":"aStEfJYSZNdE"},"source":["Пример 1. Сгенерируем искусственные данные. Сначала поработаем с простейшим одномерным случаем, когда у нас значение $y$ будет зависеть только от одного значения $x$.\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"d3tzSTkrZNdF","executionInfo":{"status":"ok","timestamp":1697453984044,"user_tz":-180,"elapsed":356,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}}},"source":["def generate_data(n_points=20):\n","  \"\"\"\n","    Принимает на вход n_points точек\n","    Возвращает данные для обучения и теста\n","  \"\"\"\n","  X = np.linspace(-5, 5, n_points)\n","  y = 10 * X - 7\n","\n","  X_train = X[0::2].reshape(-1, 1)\n","  y_train = y[0::2] + np.random.randn(int(n_points / 2)) * 10\n","\n","  X_test = X[1::2].reshape(-1, 1)\n","  y_test = y[1::2] + np.random.randn(int(n_points / 2)) * 10\n","\n","  print(f'Generated {len(X_train)} train samples and {len(X_test)} test samples')\n","\n","  return X, X_train, y_train, X_test, y_test"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"id":"bnYHO2TjZNdJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1697453985795,"user_tz":-180,"elapsed":211,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"868ca7dd-7bb5-45fb-b5ee-18306bec1b5f"},"source":["X, X_train, y_train, X_test, y_test = generate_data(100)"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Generated 50 train samples and 50 test samples\n"]}]},{"cell_type":"code","metadata":{"id":"q0l76cbaKzYg","executionInfo":{"status":"ok","timestamp":1697453988965,"user_tz":-180,"elapsed":222,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}}},"source":["### Реализуйте настройку w и b с помощью рассмотренного выше метода наименьших квадратов.\n","### Найдите значения метрик MSE и MAE. Сравните с результатами из sklearn"],"execution_count":4,"outputs":[]},{"cell_type":"code","source":["def least_squares(X, y):\n","  w = np.dot(np.dot(np.linalg.inv(np.dot(X.T, X)), X.T), y)\n","  b = y.mean() - np.dot(X, w).mean()\n","\n","  return w, b\n","\n","\n","def predict(X, w, b):\n","  return np.dot(X, w) + b\n","\n","\n","def mean_squared_error(true, pred):\n","  if true.size != pred.size:\n","    print(\"Data samples are not equal\")\n","\n","    return 1\n","\n","  mse = 0\n","  size = true.size\n","\n","  for i in range(size):\n","    mse += (1 / size) * (true[i] - pred[i])**2\n","\n","  return mse\n","\n","\n","def mean_absolute_error(true, pred):\n","  if true.size != pred.size:\n","    print(\"Data samples are not equal\")\n","\n","    return 1\n","\n","  mae = 0\n","  size = true.size\n","\n","  for i in range(size):\n","    mae += (1 / size) * abs(true[i] - pred[i])\n","\n","  return mae"],"metadata":{"id":"g7akYfEenQBz","executionInfo":{"status":"ok","timestamp":1697453990238,"user_tz":-180,"elapsed":3,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["model = LinearRegression()\n","\n","sk_train = model.fit(X_train, y_train)\n","sk_test = model.predict(X_test)\n","\n","w, b = least_squares(X_train, y_train)\n","custom_test = predict(X_test, w, b)"],"metadata":{"id":"9w_0INcqs_PP","executionInfo":{"status":"ok","timestamp":1697453993586,"user_tz":-180,"elapsed":246,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["sk_test, custom_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W1ifeH_uEEhH","executionInfo":{"status":"ok","timestamp":1697453994739,"user_tz":-180,"elapsed":229,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"33821bce-12f7-49d1-c978-6dc6c58887c8"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([-57.43062463, -55.32033879, -53.21005294, -51.0997671 ,\n","        -48.98948126, -46.87919541, -44.76890957, -42.65862373,\n","        -40.54833788, -38.43805204, -36.3277662 , -34.21748035,\n","        -32.10719451, -29.99690867, -27.88662282, -25.77633698,\n","        -23.66605114, -21.5557653 , -19.44547945, -17.33519361,\n","        -15.22490777, -13.11462192, -11.00433608,  -8.89405024,\n","         -6.78376439,  -4.67347855,  -2.56319271,  -0.45290686,\n","          1.65737898,   3.76766482,   5.87795067,   7.98823651,\n","         10.09852235,  12.2088082 ,  14.31909404,  16.42937988,\n","         18.53966573,  20.64995157,  22.76023741,  24.87052326,\n","         26.9808091 ,  29.09109494,  31.20138079,  33.31166663,\n","         35.42195247,  37.53223832,  39.64252416,  41.75281   ,\n","         43.86309584,  45.97338169]),\n"," array([-57.61082101, -55.49302698, -53.37523295, -51.25743893,\n","        -49.1396449 , -47.02185088, -44.90405685, -42.78626283,\n","        -40.6684688 , -38.55067478, -36.43288075, -34.31508672,\n","        -32.1972927 , -30.07949867, -27.96170465, -25.84391062,\n","        -23.7261166 , -21.60832257, -19.49052855, -17.37273452,\n","        -15.25494049, -13.13714647, -11.01935244,  -8.90155842,\n","         -6.78376439,  -4.66597037,  -2.54817634,  -0.43038232,\n","          1.68741171,   3.80520574,   5.92299976,   8.04079379,\n","         10.15858781,  12.27638184,  14.39417586,  16.51196989,\n","         18.62976391,  20.74755794,  22.86535197,  24.98314599,\n","         27.10094002,  29.21873404,  31.33652807,  33.45432209,\n","         35.57211612,  37.68991014,  39.80770417,  41.9254982 ,\n","         44.04329222,  46.16108625]))"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["sklearn.metrics.mean_squared_error(y_test, sk_test), sklearn.metrics.mean_absolute_error(y_test, sk_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4lZzM54IFBwI","executionInfo":{"status":"ok","timestamp":1697453999646,"user_tz":-180,"elapsed":239,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"25f6c527-86c9-4e79-dd3e-aeac64b2d684"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(91.81781698558196, 7.875084184298625)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2dTbvhkgF6SY","executionInfo":{"status":"ok","timestamp":1697454001087,"user_tz":-180,"elapsed":4,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"c6d02558-84bd-41cf-df67-72b450abf961"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([-57.56307251, -43.62122074, -47.47769663, -60.09433805,\n","       -43.95229591, -31.53686467, -61.53576556, -31.64653486,\n","       -30.09065349, -35.3778771 , -42.17858863, -40.29321965,\n","       -33.4346629 , -14.50163291, -35.66433608, -38.66421294,\n","       -25.59765605, -11.82786229, -23.41721432, -23.27276748,\n","       -13.812828  , -14.37478632, -12.57389203, -19.3004044 ,\n","       -17.50013403,  -7.42320311,  -3.82953386, -14.90372723,\n","         3.52127468,  -6.58741053,  -5.06170116,   0.73834687,\n","         7.71951833,  20.92594892,  18.26417484,  -0.22916923,\n","        30.10467395,  13.93504886,  15.21625249,  25.5667329 ,\n","        10.04051358,  53.35465547,  32.15968166,  40.74265999,\n","        19.17023061,  31.32676423,  36.34643476,  55.62014636,\n","        52.28909906,  41.53727556])"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["mean_squared_error(y_test, custom_test), mean_absolute_error(y_test, custom_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"odwxYgSPFgZs","executionInfo":{"status":"ok","timestamp":1697454009318,"user_tz":-180,"elapsed":244,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"83e2c508-c013-4580-e8cc-e922dab63674"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(92.0207054633639, 7.881649197241161)"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"luGJoQXHRzu7"},"source":["## Задание 3.2"]},{"cell_type":"markdown","metadata":{"id":"KKKQZDzWMv-j"},"source":["Пример 2. Не всегда в задаче регрессии в качестве решения выступает прямая, как в предыдущем случае. Рассмотрим ещё один пример, в котором у объектов всё ещё один признак. Но теперь мы будем брать случайную точку на синусоиде и добавлять к ней шум — таким образом получим целевую переменную, признаком в этом случае будет координата $x$."]},{"cell_type":"code","metadata":{"id":"aULennJThZxH","executionInfo":{"status":"ok","timestamp":1697454012406,"user_tz":-180,"elapsed":359,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}}},"source":["def generate_wave_set(n_support=1000, n_train=25, std=0.3):\n","    data = {}\n","    # выберем некоторое количество точек из промежутка от 0 до 2*pi\n","    data['support'] = np.linspace(0, 2*np.pi, num=n_support)\n","    # для каждой посчитаем значение sin(x) + 1\n","    # это будет ground truth\n","    data['values'] = np.sin(data['support']) + 1\n","    # из support посемплируем некоторое количество точек с возвратом, это будут признаки\n","    data['x_train'] = np.sort(np.random.choice(data['support'], size=n_train, replace=True))\n","    # опять посчитаем sin(x) + 1 и добавим шум, получим целевую переменную\n","    data['y_train'] = np.sin(data['x_train']) + 1 + np.random.normal(0, std, size=data['x_train'].shape[0])\n","    return data\n","\n","data = generate_wave_set(1000, 250)"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"3CBnODv1QYn_","executionInfo":{"status":"ok","timestamp":1697454016926,"user_tz":-180,"elapsed":204,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}}},"source":["### попробуйте реализовать настройку w и b с помощью рассмотренного выше метода наименьших квадратов.\n","### Найдите значения метрик MSE и MAE"],"execution_count":12,"outputs":[]},{"cell_type":"code","source":["w, b = least_squares(data['x_train'].reshape(-1, 1), data['y_train'])"],"metadata":{"id":"1E3OcbGi6-RY","executionInfo":{"status":"ok","timestamp":1697454018626,"user_tz":-180,"elapsed":247,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["print(f\"w = {w[0]}, b = {b}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N6UodL227Gmw","executionInfo":{"status":"ok","timestamp":1697454020401,"user_tz":-180,"elapsed":214,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"b18f401f-f31f-46a5-8914-6b55ea7cd31c"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["w = 0.15954467400272423, b = 0.5055493307831267\n"]}]},{"cell_type":"code","source":["y_train_predicted = predict(data['x_train'].reshape(-1, 1), w, b)"],"metadata":{"id":"2Hm943j-Gx2K","executionInfo":{"status":"ok","timestamp":1697454022064,"user_tz":-180,"elapsed":209,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["y_train_predicted"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"t9BGpYL2G8vh","executionInfo":{"status":"ok","timestamp":1697454023796,"user_tz":-180,"elapsed":203,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"7c0b32f5-4ddd-4171-d6da-d7f1a022769b"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.50554933, 0.50755624, 0.50855969, 0.51056659, 0.51157004,\n","       0.5125735 , 0.5145804 , 0.52160457, 0.52160457, 0.52461492,\n","       0.52461492, 0.52561837, 0.53364599, 0.53464944, 0.53966671,\n","       0.54267706, 0.55170813, 0.55572194, 0.56977027, 0.57077372,\n","       0.57177718, 0.57278063, 0.57679444, 0.57679444, 0.57779789,\n","       0.5818117 , 0.5838186 , 0.58682896, 0.60288419, 0.606898  ,\n","       0.60990836, 0.61191526, 0.62295324, 0.62295324, 0.62496014,\n","       0.6259636 , 0.6279705 , 0.63098086, 0.63700157, 0.63900847,\n","       0.64201883, 0.64302228, 0.64603264, 0.65707061, 0.65907752,\n","       0.66008097, 0.66710514, 0.67312585, 0.6741293 , 0.68015001,\n","       0.68918108, 0.69118799, 0.69921561, 0.70021906, 0.70322941,\n","       0.70423287, 0.70523632, 0.70724322, 0.71226048, 0.71426739,\n","       0.71727775, 0.72229501, 0.72329846, 0.72630882, 0.73433643,\n","       0.74236405, 0.74537441, 0.74738131, 0.74738131, 0.75841929,\n","       0.75942274, 0.76042619, 0.76544345, 0.76544345, 0.76845381,\n","       0.77046071, 0.77046071, 0.77246762, 0.77347107, 0.79052976,\n","       0.79052976, 0.79755392, 0.80457809, 0.80457809, 0.80959535,\n","       0.81260571, 0.82866094, 0.83969891, 0.84371272, 0.85575415,\n","       0.85575415, 0.86077141, 0.86277832, 0.86378177, 0.86679212,\n","       0.87381629, 0.87883355, 0.88184391, 0.88585772, 0.89388533,\n","       0.89488879, 0.89689569, 0.89890259, 0.89890259, 0.91295093,\n","       0.91495783, 0.91596128, 0.91696473, 0.92097854, 0.921982  ,\n","       0.92298545, 0.93603033, 0.94305449, 0.95409247, 0.95609937,\n","       0.95810627, 0.96111663, 0.9681408 , 0.9701477 , 0.97115115,\n","       0.98018222, 0.98118568, 0.9912202 , 0.99924782, 1.00025127,\n","       1.00125472, 1.00426508, 1.00627198, 1.01530305, 1.01730995,\n","       1.02433412, 1.03236174, 1.03336519, 1.04139281, 1.05243078,\n","       1.05343423, 1.05644459, 1.05744804, 1.05744804, 1.05945495,\n","       1.05945495, 1.06748256, 1.06848602, 1.08052744, 1.08654816,\n","       1.09858958, 1.09858958, 1.09959304, 1.10260339, 1.10561375,\n","       1.11665172, 1.11765518, 1.12066553, 1.12166898, 1.12367589,\n","       1.12869315, 1.1296966 , 1.1296966 , 1.13471386, 1.13772422,\n","       1.14675529, 1.14976565, 1.152776  , 1.15377945, 1.16180707,\n","       1.16281052, 1.16381398, 1.16481743, 1.16682433, 1.16682433,\n","       1.17083814, 1.1738485 , 1.17485195, 1.18287957, 1.18990373,\n","       1.19191064, 1.19391754, 1.1969279 , 1.1989348 , 1.21499004,\n","       1.2180004 , 1.23606254, 1.23907289, 1.2410798 , 1.24208325,\n","       1.24208325, 1.24409015, 1.2450936 , 1.25011087, 1.25111432,\n","       1.25613158, 1.25613158, 1.26014539, 1.26917646, 1.28021443,\n","       1.2872386 , 1.29827657, 1.30128693, 1.30931455, 1.31332835,\n","       1.31433181, 1.31734216, 1.31934907, 1.32035252, 1.32135597,\n","       1.32737669, 1.33038704, 1.33440085, 1.33941811, 1.35246299,\n","       1.3544699 , 1.3564768 , 1.35948716, 1.36450442, 1.36450442,\n","       1.36550787, 1.36550787, 1.37554239, 1.38357001, 1.38658037,\n","       1.38758382, 1.38758382, 1.38858727, 1.39962524, 1.39962524,\n","       1.4006287 , 1.40965977, 1.41066322, 1.41166667, 1.41869084,\n","       1.41969429, 1.43374262, 1.43374262, 1.43574952, 1.43775643,\n","       1.44177024, 1.4487944 , 1.45481512, 1.45481512, 1.45682202,\n","       1.45882892, 1.47087035, 1.4718738 , 1.47588761, 1.47889797,\n","       1.48491868, 1.49194285, 1.50097392, 1.50197737, 1.50599118])"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["print(f\"MSE: {mean_squared_error(data['y_train'], y_train_predicted)} , MAE: {mean_absolute_error(data['y_train'], y_train_predicted)} .\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yRZURnYQHK0T","executionInfo":{"status":"ok","timestamp":1697454027014,"user_tz":-180,"elapsed":222,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"846ec4d0-7893-45b1-94b2-6ff3b9db2fed"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE: 0.9637866339708958 , MAE: 0.8847547903208393 .\n"]}]},{"cell_type":"markdown","metadata":{"id":"o9iBgsGVQyOD"},"source":["Конечно, такое решение нас вряд ли может устроить. Нужно применить полинимиальную регрессию. Идея здесь такая. Каждый признак в исходную формулу может входить не только в первой степени, но и во второй, в третьей и так далее. То есть для случая, когда у нас только один признак:\n","$$ \\widehat{y} = w_1 x_1 + w_2 x_1^2 + ... + w_k x_1^k + b,$$"]},{"cell_type":"markdown","metadata":{"id":"95m0fULWR4m5"},"source":["## Задание 3.3"]},{"cell_type":"code","metadata":{"id":"eyzS3rlzSuDU","colab":{"base_uri":"https://localhost:8080/","height":292},"executionInfo":{"status":"ok","timestamp":1697454031153,"user_tz":-180,"elapsed":1608,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"2ca2931e-6ec2-4305-ef3f-fbe16878ed8b"},"source":["from sklearn.preprocessing import PolynomialFeatures\n","\n","### Реализуйте полиномиальную регрессию. Сделайте визуализацию для полиномов разных степеней.\n","### Полином какой степени подходит больше других? Почему?\n","\n","np.random.seed(0)\n","\n","def true_fun(X):\n","    return np.cos(1.5 * np.pi * X)\n","\n","n_samples = 30\n","degrees = [1, 2, 4, 6, 8, 10, 12]\n","\n","X = np.sort(np.random.rand(n_samples))\n","y = true_fun(X) + np.random.randn(n_samples) * 0.1\n","\n","plt.figure(figsize=(30, 5))\n","\n","for i in range(len(degrees)):\n","    ax = plt.subplot(1, len(degrees), i + 1)\n","    plt.setp(ax, xticks=(), yticks=())\n","\n","    polynomial_features = PolynomialFeatures(degree=degrees[i], include_bias=False)\n","    linear_regression = LinearRegression()\n","    pipeline = Pipeline([(\"polynomial_features\", polynomial_features), (\"linear_regression\", linear_regression)])\n","\n","    pipeline.fit(X[:, np.newaxis], y)\n","\n","    scores = cross_val_score(pipeline, X[:, np.newaxis], y, scoring=\"neg_mean_squared_error\", cv=10)\n","\n","    X_test = np.linspace(0, 1, 100)\n","    plt.plot(X_test, pipeline.predict(X_test[:, np.newaxis]), label=\"Model\")\n","    plt.plot(X_test, true_fun(X_test), label=\"True function\")\n","    plt.scatter(X, y, edgecolor='b', s=20, label=\"Samples\")\n","    plt.xlabel(\"x\")\n","    plt.ylabel(\"y\")\n","    plt.xlim((0, 1))\n","    plt.ylim((-2, 2))\n","    plt.legend(loc=\"best\")\n","    plt.title(\"Degree {}\\nMSE = {:.2e}(+/- {:.2e})\".format(degrees[i], -scores.mean(), scores.std()))\n","\n","plt.show()"],"execution_count":18,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 3000x500 with 7 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"feMIFS82ZNdn"},"source":["# Реальный датасет"]},{"cell_type":"markdown","metadata":{"id":"_NVLc80wZNdn"},"source":["Возьмём реальный набор данных Boston из sklearn.datasets. Этот датасет описывает средние цены на недвижимость в районах Бостона в тысячах долларов.\n","\n","Примеры признаков объектов недвижимости: количество преступлений на душу населения, процент старых домов в районе, количество учеников на одного учителя и т.д. Обратите внимание на то, что данные уже оцифрованы там, где изначально признаки были качественными."]},{"cell_type":"markdown","metadata":{"id":"yMC-plFGZNdo"},"source":["Загрузим датасет, выведем информацию"]},{"cell_type":"markdown","source":["Возьмите датасет отсюда: https://www.kaggle.com/datasets/vikrishnan/boston-house-prices/"],"metadata":{"id":"y5kdAeEQkFa1"}},{"cell_type":"code","source":["house_data = pd.read_csv(filepath_or_buffer = \"/content/drive/MyDrive/Colab Notebooks/ML_Lab_3_Data/housing_formatted.csv\")\n","house_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"pTFPYl1Velo5","executionInfo":{"status":"ok","timestamp":1697454050062,"user_tz":-180,"elapsed":935,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"6a7902f0-0c29-44bd-db02-d152188a9a0d"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        CRIM    ZN  INDUS  CHAS    NOX     RM   AGE     DIS  RAD    TAX  \\\n","0    0.00632  18.0   2.31     0  0.538  6.575  65.2  4.0900    1  296.0   \n","1    0.02731   0.0   7.07     0  0.469  6.421  78.9  4.9671    2  242.0   \n","2    0.02729   0.0   7.07     0  0.469  7.185  61.1  4.9671    2  242.0   \n","3    0.03237   0.0   2.18     0  0.458  6.998  45.8  6.0622    3  222.0   \n","4    0.06905   0.0   2.18     0  0.458  7.147  54.2  6.0622    3  222.0   \n","..       ...   ...    ...   ...    ...    ...   ...     ...  ...    ...   \n","501  0.06263   0.0  11.93     0  0.573  6.593  69.1  2.4786    1  273.0   \n","502  0.04527   0.0  11.93     0  0.573  6.120  76.7  2.2875    1  273.0   \n","503  0.06076   0.0  11.93     0  0.573  6.976  91.0  2.1675    1  273.0   \n","504  0.10959   0.0  11.93     0  0.573  6.794  89.3  2.3889    1  273.0   \n","505  0.04741   0.0  11.93     0  0.573  6.030  80.8  2.5050    1  273.0   \n","\n","     PTRATIO       B  LSTAT  MEDV  \n","0       15.3  396.90   4.98  24.0  \n","1       17.8  396.90   9.14  21.6  \n","2       17.8  392.83   4.03  34.7  \n","3       18.7  394.63   2.94  33.4  \n","4       18.7  396.90   5.33  36.2  \n","..       ...     ...    ...   ...  \n","501     21.0  391.99   9.67  22.4  \n","502     21.0  396.90   9.08  20.6  \n","503     21.0  396.90   5.64  23.9  \n","504     21.0  393.45   6.48  22.0  \n","505     21.0  396.90   7.88  11.9  \n","\n","[506 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-bc1e59bd-32ab-4927-8428-cd82faaf6d09\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CRIM</th>\n","      <th>ZN</th>\n","      <th>INDUS</th>\n","      <th>CHAS</th>\n","      <th>NOX</th>\n","      <th>RM</th>\n","      <th>AGE</th>\n","      <th>DIS</th>\n","      <th>RAD</th>\n","      <th>TAX</th>\n","      <th>PTRATIO</th>\n","      <th>B</th>\n","      <th>LSTAT</th>\n","      <th>MEDV</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.00632</td>\n","      <td>18.0</td>\n","      <td>2.31</td>\n","      <td>0</td>\n","      <td>0.538</td>\n","      <td>6.575</td>\n","      <td>65.2</td>\n","      <td>4.0900</td>\n","      <td>1</td>\n","      <td>296.0</td>\n","      <td>15.3</td>\n","      <td>396.90</td>\n","      <td>4.98</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.02731</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0</td>\n","      <td>0.469</td>\n","      <td>6.421</td>\n","      <td>78.9</td>\n","      <td>4.9671</td>\n","      <td>2</td>\n","      <td>242.0</td>\n","      <td>17.8</td>\n","      <td>396.90</td>\n","      <td>9.14</td>\n","      <td>21.6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.02729</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0</td>\n","      <td>0.469</td>\n","      <td>7.185</td>\n","      <td>61.1</td>\n","      <td>4.9671</td>\n","      <td>2</td>\n","      <td>242.0</td>\n","      <td>17.8</td>\n","      <td>392.83</td>\n","      <td>4.03</td>\n","      <td>34.7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.03237</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0</td>\n","      <td>0.458</td>\n","      <td>6.998</td>\n","      <td>45.8</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222.0</td>\n","      <td>18.7</td>\n","      <td>394.63</td>\n","      <td>2.94</td>\n","      <td>33.4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.06905</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0</td>\n","      <td>0.458</td>\n","      <td>7.147</td>\n","      <td>54.2</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222.0</td>\n","      <td>18.7</td>\n","      <td>396.90</td>\n","      <td>5.33</td>\n","      <td>36.2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>501</th>\n","      <td>0.06263</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.593</td>\n","      <td>69.1</td>\n","      <td>2.4786</td>\n","      <td>1</td>\n","      <td>273.0</td>\n","      <td>21.0</td>\n","      <td>391.99</td>\n","      <td>9.67</td>\n","      <td>22.4</td>\n","    </tr>\n","    <tr>\n","      <th>502</th>\n","      <td>0.04527</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.120</td>\n","      <td>76.7</td>\n","      <td>2.2875</td>\n","      <td>1</td>\n","      <td>273.0</td>\n","      <td>21.0</td>\n","      <td>396.90</td>\n","      <td>9.08</td>\n","      <td>20.6</td>\n","    </tr>\n","    <tr>\n","      <th>503</th>\n","      <td>0.06076</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.976</td>\n","      <td>91.0</td>\n","      <td>2.1675</td>\n","      <td>1</td>\n","      <td>273.0</td>\n","      <td>21.0</td>\n","      <td>396.90</td>\n","      <td>5.64</td>\n","      <td>23.9</td>\n","    </tr>\n","    <tr>\n","      <th>504</th>\n","      <td>0.10959</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.794</td>\n","      <td>89.3</td>\n","      <td>2.3889</td>\n","      <td>1</td>\n","      <td>273.0</td>\n","      <td>21.0</td>\n","      <td>393.45</td>\n","      <td>6.48</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>505</th>\n","      <td>0.04741</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.030</td>\n","      <td>80.8</td>\n","      <td>2.5050</td>\n","      <td>1</td>\n","      <td>273.0</td>\n","      <td>21.0</td>\n","      <td>396.90</td>\n","      <td>7.88</td>\n","      <td>11.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>506 rows × 14 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bc1e59bd-32ab-4927-8428-cd82faaf6d09')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bc1e59bd-32ab-4927-8428-cd82faaf6d09 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bc1e59bd-32ab-4927-8428-cd82faaf6d09');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-162ec36a-e827-4e21-b085-3d9f635b7aa7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-162ec36a-e827-4e21-b085-3d9f635b7aa7')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-162ec36a-e827-4e21-b085-3d9f635b7aa7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","metadata":{"id":"VloKlvM7Vtih"},"source":["CRIM: Per capita crime rate by town\n","\n","ZN: Proportion of residential land zoned for lots over 25,000 sq. ft\n","\n","INDUS: Proportion of non-retail business acres per town\n","\n","CHAS: Charles River dummy variable (= 1 if tract bounds river; 0 otherwise)\n","\n","NOX: Nitric oxide concentration (parts per 10 million)\n","\n","RM: Average number of rooms per dwelling\n","\n","AGE: Proportion of owner-occupied units built prior to 1940\n","\n","DIS: Weighted distances to five Boston employment centers\n","\n","RAD: Index of accessibility to radial highways\n","\n","TAX: Full-value property tax rate per $10,000\n","\n","PTRATIO: Pupil-teacher ratio by town\n","\n","B: 1000(Bk — 0.63)², where Bk is the proportion of [people of African American descent] by town\n","\n","LSTAT: Percentage of lower status of the population"]},{"cell_type":"markdown","metadata":{"id":"C8rsoyN-hbQv"},"source":["Целевая переменная — MEDV: Median value of owner-occupied homes in $1000s"]},{"cell_type":"code","source":["y = house_data[\"MEDV\"].values\n","y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IqPHZyRmrAGx","executionInfo":{"status":"ok","timestamp":1697454053186,"user_tz":-180,"elapsed":210,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"ade36343-825a-4535-e722-fccd8eab71bf"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([24. , 21.6, 34.7, 33.4, 36.2, 28.7, 22.9, 27.1, 16.5, 18.9, 15. ,\n","       18.9, 21.7, 20.4, 18.2, 19.9, 23.1, 17.5, 20.2, 18.2, 13.6, 19.6,\n","       15.2, 14.5, 15.6, 13.9, 16.6, 14.8, 18.4, 21. , 12.7, 14.5, 13.2,\n","       13.1, 13.5, 18.9, 20. , 21. , 24.7, 30.8, 34.9, 26.6, 25.3, 24.7,\n","       21.2, 19.3, 20. , 16.6, 14.4, 19.4, 19.7, 20.5, 25. , 23.4, 18.9,\n","       35.4, 24.7, 31.6, 23.3, 19.6, 18.7, 16. , 22.2, 25. , 33. , 23.5,\n","       19.4, 22. , 17.4, 20.9, 24.2, 21.7, 22.8, 23.4, 24.1, 21.4, 20. ,\n","       20.8, 21.2, 20.3, 28. , 23.9, 24.8, 22.9, 23.9, 26.6, 22.5, 22.2,\n","       23.6, 28.7, 22.6, 22. , 22.9, 25. , 20.6, 28.4, 21.4, 38.7, 43.8,\n","       33.2, 27.5, 26.5, 18.6, 19.3, 20.1, 19.5, 19.5, 20.4, 19.8, 19.4,\n","       21.7, 22.8, 18.8, 18.7, 18.5, 18.3, 21.2, 19.2, 20.4, 19.3, 22. ,\n","       20.3, 20.5, 17.3, 18.8, 21.4, 15.7, 16.2, 18. , 14.3, 19.2, 19.6,\n","       23. , 18.4, 15.6, 18.1, 17.4, 17.1, 13.3, 17.8, 14. , 14.4, 13.4,\n","       15.6, 11.8, 13.8, 15.6, 14.6, 17.8, 15.4, 21.5, 19.6, 15.3, 19.4,\n","       17. , 15.6, 13.1, 41.3, 24.3, 23.3, 27. , 50. , 50. , 50. , 22.7,\n","       25. , 50. , 23.8, 23.8, 22.3, 17.4, 19.1, 23.1, 23.6, 22.6, 29.4,\n","       23.2, 24.6, 29.9, 37.2, 39.8, 36.2, 37.9, 32.5, 26.4, 29.6, 50. ,\n","       32. , 29.8, 34.9, 37. , 30.5, 36.4, 31.1, 29.1, 50. , 33.3, 30.3,\n","       34.6, 34.9, 32.9, 24.1, 42.3, 48.5, 50. , 22.6, 24.4, 22.5, 24.4,\n","       20. , 21.7, 19.3, 22.4, 28.1, 23.7, 25. , 23.3, 28.7, 21.5, 23. ,\n","       26.7, 21.7, 27.5, 30.1, 44.8, 50. , 37.6, 31.6, 46.7, 31.5, 24.3,\n","       31.7, 41.7, 48.3, 29. , 24. , 25.1, 31.5, 23.7, 23.3, 22. , 20.1,\n","       22.2, 23.7, 17.6, 18.5, 24.3, 20.5, 24.5, 26.2, 24.4, 24.8, 29.6,\n","       42.8, 21.9, 20.9, 44. , 50. , 36. , 30.1, 33.8, 43.1, 48.8, 31. ,\n","       36.5, 22.8, 30.7, 50. , 43.5, 20.7, 21.1, 25.2, 24.4, 35.2, 32.4,\n","       32. , 33.2, 33.1, 29.1, 35.1, 45.4, 35.4, 46. , 50. , 32.2, 22. ,\n","       20.1, 23.2, 22.3, 24.8, 28.5, 37.3, 27.9, 23.9, 21.7, 28.6, 27.1,\n","       20.3, 22.5, 29. , 24.8, 22. , 26.4, 33.1, 36.1, 28.4, 33.4, 28.2,\n","       22.8, 20.3, 16.1, 22.1, 19.4, 21.6, 23.8, 16.2, 17.8, 19.8, 23.1,\n","       21. , 23.8, 23.1, 20.4, 18.5, 25. , 24.6, 23. , 22.2, 19.3, 22.6,\n","       19.8, 17.1, 19.4, 22.2, 20.7, 21.1, 19.5, 18.5, 20.6, 19. , 18.7,\n","       32.7, 16.5, 23.9, 31.2, 17.5, 17.2, 23.1, 24.5, 26.6, 22.9, 24.1,\n","       18.6, 30.1, 18.2, 20.6, 17.8, 21.7, 22.7, 22.6, 25. , 19.9, 20.8,\n","       16.8, 21.9, 27.5, 21.9, 23.1, 50. , 50. , 50. , 50. , 50. , 13.8,\n","       13.8, 15. , 13.9, 13.3, 13.1, 10.2, 10.4, 10.9, 11.3, 12.3,  8.8,\n","        7.2, 10.5,  7.4, 10.2, 11.5, 15.1, 23.2,  9.7, 13.8, 12.7, 13.1,\n","       12.5,  8.5,  5. ,  6.3,  5.6,  7.2, 12.1,  8.3,  8.5,  5. , 11.9,\n","       27.9, 17.2, 27.5, 15. , 17.2, 17.9, 16.3,  7. ,  7.2,  7.5, 10.4,\n","        8.8,  8.4, 16.7, 14.2, 20.8, 13.4, 11.7,  8.3, 10.2, 10.9, 11. ,\n","        9.5, 14.5, 14.1, 16.1, 14.3, 11.7, 13.4,  9.6,  8.7,  8.4, 12.8,\n","       10.5, 17.1, 18.4, 15.4, 10.8, 11.8, 14.9, 12.6, 14.1, 13. , 13.4,\n","       15.2, 16.1, 17.8, 14.9, 14.1, 12.7, 13.5, 14.9, 20. , 16.4, 17.7,\n","       19.5, 20.2, 21.4, 19.9, 19. , 19.1, 19.1, 20.1, 19.9, 19.6, 23.2,\n","       29.8, 13.8, 13.3, 16.7, 12. , 14.6, 21.4, 23. , 23.7, 25. , 21.8,\n","       20.6, 21.2, 19.1, 20.6, 15.2,  7. ,  8.1, 13.6, 20.1, 21.8, 24.5,\n","       23.1, 19.7, 18.3, 21.2, 17.5, 16.8, 22.4, 20.6, 23.9, 22. , 11.9])"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["X = house_data.drop(columns = [\"MEDV\"], axis = 1)\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"6z79P7purW5l","executionInfo":{"status":"ok","timestamp":1697454056087,"user_tz":-180,"elapsed":208,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"edd75ace-ec90-436a-d6ed-6258efe245a7"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        CRIM    ZN  INDUS  CHAS    NOX     RM   AGE     DIS  RAD    TAX  \\\n","0    0.00632  18.0   2.31     0  0.538  6.575  65.2  4.0900    1  296.0   \n","1    0.02731   0.0   7.07     0  0.469  6.421  78.9  4.9671    2  242.0   \n","2    0.02729   0.0   7.07     0  0.469  7.185  61.1  4.9671    2  242.0   \n","3    0.03237   0.0   2.18     0  0.458  6.998  45.8  6.0622    3  222.0   \n","4    0.06905   0.0   2.18     0  0.458  7.147  54.2  6.0622    3  222.0   \n","..       ...   ...    ...   ...    ...    ...   ...     ...  ...    ...   \n","501  0.06263   0.0  11.93     0  0.573  6.593  69.1  2.4786    1  273.0   \n","502  0.04527   0.0  11.93     0  0.573  6.120  76.7  2.2875    1  273.0   \n","503  0.06076   0.0  11.93     0  0.573  6.976  91.0  2.1675    1  273.0   \n","504  0.10959   0.0  11.93     0  0.573  6.794  89.3  2.3889    1  273.0   \n","505  0.04741   0.0  11.93     0  0.573  6.030  80.8  2.5050    1  273.0   \n","\n","     PTRATIO       B  LSTAT  \n","0       15.3  396.90   4.98  \n","1       17.8  396.90   9.14  \n","2       17.8  392.83   4.03  \n","3       18.7  394.63   2.94  \n","4       18.7  396.90   5.33  \n","..       ...     ...    ...  \n","501     21.0  391.99   9.67  \n","502     21.0  396.90   9.08  \n","503     21.0  396.90   5.64  \n","504     21.0  393.45   6.48  \n","505     21.0  396.90   7.88  \n","\n","[506 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-5eb99614-26e1-4716-98a3-4019d3bac10c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CRIM</th>\n","      <th>ZN</th>\n","      <th>INDUS</th>\n","      <th>CHAS</th>\n","      <th>NOX</th>\n","      <th>RM</th>\n","      <th>AGE</th>\n","      <th>DIS</th>\n","      <th>RAD</th>\n","      <th>TAX</th>\n","      <th>PTRATIO</th>\n","      <th>B</th>\n","      <th>LSTAT</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.00632</td>\n","      <td>18.0</td>\n","      <td>2.31</td>\n","      <td>0</td>\n","      <td>0.538</td>\n","      <td>6.575</td>\n","      <td>65.2</td>\n","      <td>4.0900</td>\n","      <td>1</td>\n","      <td>296.0</td>\n","      <td>15.3</td>\n","      <td>396.90</td>\n","      <td>4.98</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.02731</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0</td>\n","      <td>0.469</td>\n","      <td>6.421</td>\n","      <td>78.9</td>\n","      <td>4.9671</td>\n","      <td>2</td>\n","      <td>242.0</td>\n","      <td>17.8</td>\n","      <td>396.90</td>\n","      <td>9.14</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.02729</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0</td>\n","      <td>0.469</td>\n","      <td>7.185</td>\n","      <td>61.1</td>\n","      <td>4.9671</td>\n","      <td>2</td>\n","      <td>242.0</td>\n","      <td>17.8</td>\n","      <td>392.83</td>\n","      <td>4.03</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.03237</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0</td>\n","      <td>0.458</td>\n","      <td>6.998</td>\n","      <td>45.8</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222.0</td>\n","      <td>18.7</td>\n","      <td>394.63</td>\n","      <td>2.94</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.06905</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0</td>\n","      <td>0.458</td>\n","      <td>7.147</td>\n","      <td>54.2</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222.0</td>\n","      <td>18.7</td>\n","      <td>396.90</td>\n","      <td>5.33</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>501</th>\n","      <td>0.06263</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.593</td>\n","      <td>69.1</td>\n","      <td>2.4786</td>\n","      <td>1</td>\n","      <td>273.0</td>\n","      <td>21.0</td>\n","      <td>391.99</td>\n","      <td>9.67</td>\n","    </tr>\n","    <tr>\n","      <th>502</th>\n","      <td>0.04527</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.120</td>\n","      <td>76.7</td>\n","      <td>2.2875</td>\n","      <td>1</td>\n","      <td>273.0</td>\n","      <td>21.0</td>\n","      <td>396.90</td>\n","      <td>9.08</td>\n","    </tr>\n","    <tr>\n","      <th>503</th>\n","      <td>0.06076</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.976</td>\n","      <td>91.0</td>\n","      <td>2.1675</td>\n","      <td>1</td>\n","      <td>273.0</td>\n","      <td>21.0</td>\n","      <td>396.90</td>\n","      <td>5.64</td>\n","    </tr>\n","    <tr>\n","      <th>504</th>\n","      <td>0.10959</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.794</td>\n","      <td>89.3</td>\n","      <td>2.3889</td>\n","      <td>1</td>\n","      <td>273.0</td>\n","      <td>21.0</td>\n","      <td>393.45</td>\n","      <td>6.48</td>\n","    </tr>\n","    <tr>\n","      <th>505</th>\n","      <td>0.04741</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.030</td>\n","      <td>80.8</td>\n","      <td>2.5050</td>\n","      <td>1</td>\n","      <td>273.0</td>\n","      <td>21.0</td>\n","      <td>396.90</td>\n","      <td>7.88</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>506 rows × 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5eb99614-26e1-4716-98a3-4019d3bac10c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5eb99614-26e1-4716-98a3-4019d3bac10c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5eb99614-26e1-4716-98a3-4019d3bac10c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-68c41bb9-aa8c-4728-9932-7bb1f8bd0d5e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-68c41bb9-aa8c-4728-9932-7bb1f8bd0d5e')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-68c41bb9-aa8c-4728-9932-7bb1f8bd0d5e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","metadata":{"id":"kjL3jxlqgHWs"},"source":["## Задание 3.4"]},{"cell_type":"code","metadata":{"id":"PbTQGLKagJN5","executionInfo":{"status":"ok","timestamp":1697454058487,"user_tz":-180,"elapsed":4,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}}},"source":["### оставьте в наборе данных только 7 наиболее значимых признаков\n","### настройте параметры линейной регрессии и сравните метрики качества (MSE и MAE) для полного датасета и усечённого\n","\n","house_model = LinearRegression()\n","X_train, X_test, y_train, y_test = train_test_split(X, y, train_size = 0.7)\n","house_model.fit(X_train, y_train)\n","\n","y_train_prediction = house_model.predict(X_train)\n","y_test_prediction = house_model.predict(X_test)"],"execution_count":22,"outputs":[]},{"cell_type":"code","source":["print('Train MSE: ', sklearn.metrics.mean_squared_error(y_train, y_train_prediction))\n","print('Test MSE: ', sklearn.metrics.mean_squared_error(y_test, y_test_prediction))\n","print('Train MAE: ', sklearn.metrics.mean_absolute_error(y_train, y_train_prediction))\n","print('Test MAE: ', sklearn.metrics.mean_absolute_error(y_test, y_test_prediction))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z5n2dSrxuKbg","executionInfo":{"status":"ok","timestamp":1697454059958,"user_tz":-180,"elapsed":5,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"31c481a9-6a8c-4e8c-d4ae-d7f558bbd767"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Train MSE:  23.988611272674554\n","Test MSE:  17.625015133054156\n","Train MAE:  3.4214723754421885\n","Test MAE:  3.080710948606619\n"]}]},{"cell_type":"code","source":["weights = list(house_model.coef_)\n","coef_names = list(X.columns)\n","coef_weights = {}\n","\n","for i in range(len(coef_names)):\n","  coef_weights[coef_names[i]] = weights[i]\n","\n","coef_weights"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lFT9lTj-ufAm","executionInfo":{"status":"ok","timestamp":1697454062191,"user_tz":-180,"elapsed":6,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"a4887248-303a-4105-fa30-a1300cc375d3"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'CRIM': -0.11901645081048977,\n"," 'ZN': 0.04765319191741521,\n"," 'INDUS': 0.004427058942115865,\n"," 'CHAS': 2.692513076962155,\n"," 'NOX': -17.25491200988586,\n"," 'RM': 4.01431430605833,\n"," 'AGE': -0.0006976466515548644,\n"," 'DIS': -1.5208930547766955,\n"," 'RAD': 0.31475520101163296,\n"," 'TAX': -0.0109450230856116,\n"," 'PTRATIO': -0.867122886024268,\n"," 'B': 0.01124120983268576,\n"," 'LSTAT': -0.5013151172641348}"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["top_7_coefs = sorted(coef_weights, key = lambda coef_name: abs(coef_weights[coef_name]), reverse = True)[:7]\n","top_7_coefs"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zjHFu58qy0ir","executionInfo":{"status":"ok","timestamp":1697454065056,"user_tz":-180,"elapsed":210,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"0f543753-dd81-4126-f624-15a2ae65a734"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['NOX', 'RM', 'CHAS', 'DIS', 'PTRATIO', 'LSTAT', 'RAD']"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["X_new = X[top_7_coefs]\n","X_new"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"Qnta2rF0zAY6","executionInfo":{"status":"ok","timestamp":1697454067756,"user_tz":-180,"elapsed":343,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"19601424-1549-41f0-f004-4bc3c8773763"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       NOX     RM  CHAS     DIS  PTRATIO  LSTAT  RAD\n","0    0.538  6.575     0  4.0900     15.3   4.98    1\n","1    0.469  6.421     0  4.9671     17.8   9.14    2\n","2    0.469  7.185     0  4.9671     17.8   4.03    2\n","3    0.458  6.998     0  6.0622     18.7   2.94    3\n","4    0.458  7.147     0  6.0622     18.7   5.33    3\n","..     ...    ...   ...     ...      ...    ...  ...\n","501  0.573  6.593     0  2.4786     21.0   9.67    1\n","502  0.573  6.120     0  2.2875     21.0   9.08    1\n","503  0.573  6.976     0  2.1675     21.0   5.64    1\n","504  0.573  6.794     0  2.3889     21.0   6.48    1\n","505  0.573  6.030     0  2.5050     21.0   7.88    1\n","\n","[506 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-7f9f75a6-a052-4d56-bb33-c63c345adc8f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>NOX</th>\n","      <th>RM</th>\n","      <th>CHAS</th>\n","      <th>DIS</th>\n","      <th>PTRATIO</th>\n","      <th>LSTAT</th>\n","      <th>RAD</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.538</td>\n","      <td>6.575</td>\n","      <td>0</td>\n","      <td>4.0900</td>\n","      <td>15.3</td>\n","      <td>4.98</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.469</td>\n","      <td>6.421</td>\n","      <td>0</td>\n","      <td>4.9671</td>\n","      <td>17.8</td>\n","      <td>9.14</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.469</td>\n","      <td>7.185</td>\n","      <td>0</td>\n","      <td>4.9671</td>\n","      <td>17.8</td>\n","      <td>4.03</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.458</td>\n","      <td>6.998</td>\n","      <td>0</td>\n","      <td>6.0622</td>\n","      <td>18.7</td>\n","      <td>2.94</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.458</td>\n","      <td>7.147</td>\n","      <td>0</td>\n","      <td>6.0622</td>\n","      <td>18.7</td>\n","      <td>5.33</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>501</th>\n","      <td>0.573</td>\n","      <td>6.593</td>\n","      <td>0</td>\n","      <td>2.4786</td>\n","      <td>21.0</td>\n","      <td>9.67</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>502</th>\n","      <td>0.573</td>\n","      <td>6.120</td>\n","      <td>0</td>\n","      <td>2.2875</td>\n","      <td>21.0</td>\n","      <td>9.08</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>503</th>\n","      <td>0.573</td>\n","      <td>6.976</td>\n","      <td>0</td>\n","      <td>2.1675</td>\n","      <td>21.0</td>\n","      <td>5.64</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>504</th>\n","      <td>0.573</td>\n","      <td>6.794</td>\n","      <td>0</td>\n","      <td>2.3889</td>\n","      <td>21.0</td>\n","      <td>6.48</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>505</th>\n","      <td>0.573</td>\n","      <td>6.030</td>\n","      <td>0</td>\n","      <td>2.5050</td>\n","      <td>21.0</td>\n","      <td>7.88</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>506 rows × 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f9f75a6-a052-4d56-bb33-c63c345adc8f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7f9f75a6-a052-4d56-bb33-c63c345adc8f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7f9f75a6-a052-4d56-bb33-c63c345adc8f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a962e4f7-d5f3-4d76-97c0-bd23ece04003\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a962e4f7-d5f3-4d76-97c0-bd23ece04003')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a962e4f7-d5f3-4d76-97c0-bd23ece04003 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["house_model_new = LinearRegression()\n","X_train_new, X_test_new, y_train_new, y_test_new = train_test_split(X_new, y, train_size = 0.7)\n","house_model_new.fit(X_train_new, y_train_new)\n","\n","y_train_new_prediction = house_model_new.predict(X_train_new)\n","y_test_new_prediction = house_model_new.predict(X_test_new)"],"metadata":{"id":"w2sastPMzxTN","executionInfo":{"status":"ok","timestamp":1697454071613,"user_tz":-180,"elapsed":4,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}}},"execution_count":27,"outputs":[]},{"cell_type":"code","source":["print('Train MSE: ', sklearn.metrics.mean_squared_error(y_train_new, y_train_new_prediction))\n","print('Test MSE: ', sklearn.metrics.mean_squared_error(y_test_new, y_test_new_prediction))\n","print('Train MAE: ', sklearn.metrics.mean_absolute_error(y_train_new, y_train_new_prediction))\n","print('Test MAE: ', sklearn.metrics.mean_absolute_error(y_test_new, y_test_new_prediction))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A4lRcQq31NQl","executionInfo":{"status":"ok","timestamp":1697454072879,"user_tz":-180,"elapsed":4,"user":{"displayName":"Timur Khapchaev","userId":"00723514413173892179"}},"outputId":"cc36bc19-b2a2-497e-8ac9-00632b428b69"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["Train MSE:  24.716818180110035\n","Test MSE:  22.341753863809913\n","Train MAE:  3.6043093700608817\n","Test MAE:  3.281620212797795\n"]}]}]}